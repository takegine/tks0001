{
   target                          	= table: 0x001fb840 (table)
   {
      metatable = table: 0x0018b2d0
      {
         GetDenies                       	= function: 0x00196710 (function)
         GetIntellect                    	= function: 0x0018bbf0 (function)
         GetRespawnsDisabled             	= function: 0x001959c8 (function)
         ShouldDoFlyHeightVisual         	= function: 0x0018b470 (function)
         GetPlayerID                     	= function: 0x0018b670 (function)
         GetLastHits                     	= function: 0x00196690 (function)
         GetBaseAgility                  	= function: 0x0018bf98 (function)
         IsReincarnating                 	= function: 0x00198120 (function)
         FDesc                           	= table: 0x0018b358 (table)
         {
            GetDenies                       	= int GetDenies()
Value is stored in PlayerResource. (userdata)
            GetIntellect                    	= float GetIntellect()
 (userdata)
            GetRespawnsDisabled             	= bool GetRespawnsDisabled()
Is this hero prevented from respawning? (userdata)
            ShouldDoFlyHeightVisual         	= bool ShouldDoFlyHeightVisual()
 (userdata)
            GetPlayerID                     	= int GetPlayerID()
Returns player ID of the player owning this hero (userdata)
            GetLastHits                     	= int GetLastHits()
Value is stored in PlayerResource. (userdata)
            GetBaseAgility                  	= float GetBaseAgility()
 (userdata)
            IsReincarnating                 	= bool IsReincarnating()
 (userdata)
            SetBaseAgility                  	= void SetBaseAgility(float flAgility)
 (userdata)
            SetBotDifficulty                	= void SetBotDifficulty(int nDifficulty)
 (userdata)
            IncrementLastHitMultikill       	= void IncrementLastHitMultikill()
Value is stored in PlayerResource. (userdata)
            RespawnHero                     	= void RespawnHero(bool bBuyBack, bool bRespawnPenalty)
Respawn this hero. (userdata)
            GetBaseStrength                 	= float GetBaseStrength()
 (userdata)
            GetDeathGoldCost                	= int GetDeathGoldCost()
 (userdata)
            GetNumItemsInStash              	= int GetNumItemsInStash()
 (userdata)
            ClearLastHitMultikill           	= void ClearLastHitMultikill()
Value is stored in PlayerResource. (userdata)
            ModifyGold                      	= int ModifyGold(int iGoldChange, bool bReliable, int iReason)
Gives this hero some gold.  Args: int nGoldChange, bool bReliable, int reason (userdata)
            GetPrimaryStatValue             	= float GetPrimaryStatValue()
 (userdata)
            ClearStreak                     	= void ClearStreak()
Value is stored in PlayerResource. (userdata)
            SetStashEnabled                 	= void SetStashEnabled(bool bEnabled)
 (userdata)
            GetAgility                      	= float GetAgility()
 (userdata)
            SetBuybackGoldLimitTime         	= void SetBuybackGoldLimitTime(float flTime)
Set the amount of time gold gain is limited after buying back. (userdata)
            CalculateStatBonus              	= void CalculateStatBonus()
Recalculate all stats after the hero gains stats. (userdata)
            GetBuybackCooldownTime          	= float GetBuybackCooldownTime()
Return float value for the amount of time left on cooldown for this hero's buyback. (userdata)
            GetGoldBounty                   	= int GetGoldBounty()
 (userdata)
            IncrementStreak                 	= void IncrementStreak()
Value is stored in PlayerResource. (userdata)
            IsBuybackDisabledByReapersScythe	= bool IsBuybackDisabledByReapersScythe()
 (userdata)
            IsStashEnabled                  	= bool IsStashEnabled()
 (userdata)
            GetBaseManaRegen                	= float GetBaseManaRegen()
Returns the base mana regen. (userdata)
            GetBuybackCost                  	= int GetBuybackCost(bool bReturnOldValues)
Return integer value for the gold cost of a buyback. (userdata)
            SetRespawnPosition              	= void SetRespawnPosition(Vector vOrigin)
 (userdata)
            CanEarnGold                     	= bool CanEarnGold()
Returns boolean value result of buyback gold limit time less than game time. (userdata)
            GetStrength                     	= float GetStrength()
 (userdata)
            GetAgilityGain                  	= float GetAgilityGain()
 (userdata)
            GetNumAttackers                 	= int GetNumAttackers()
 (userdata)
            GetCurrentXP                    	= int GetCurrentXP()
Returns the amount of XP  (userdata)
            GetMultipleKillCount            	= int GetMultipleKillCount()
 (userdata)
            GetIncreasedAttackSpeed         	= float GetIncreasedAttackSpeed()
Hero attack speed is also affected by agility. (userdata)
            PerformTaunt                    	= void PerformTaunt()
 (userdata)
            SetAbilityPoints                	= void SetAbilityPoints(int iPoints)
Sets the current unspent ability points. (userdata)
            SetPrimaryAttribute             	= void SetPrimaryAttribute(int nPrimaryAttribute)
Set this hero's primary attribute value. (userdata)
            ModifyIntellect                 	= void ModifyIntellect(float flNewIntellect)
Adds passed value to base attribute value, then calls CalculateStatBonus. (userdata)
            SetBuybackCooldownTime          	= void SetBuybackCooldownTime(float flTime)
Sets the buyback cooldown time. (userdata)
            GetNumItemsInInventory          	= int GetNumItemsInInventory()
 (userdata)
            HasAnyAvailableInventorySpace   	= bool HasAnyAvailableInventorySpace()
 (userdata)
            HasRoomForItem                  	= int HasRoomForItem(string pItemName, bool bIncludeStashCombines, bool bAllowSelling)
Args: const char* pItemName, bool bIncludeStashCombines, bool bAllowSelling (userdata)
            SetBaseIntellect                	= void SetBaseIntellect(float flIntellect)
 (userdata)
            SetGold                         	= void SetGold(int iGold, bool bReliable)
Sets the gold amount for the player owning this hero (userdata)
            SetTimeUntilRespawn             	= void SetTimeUntilRespawn(float time)
 (userdata)
            KilledHero                      	= void KilledHero(handle hHero, handle hInflictor)
Args: Hero, Inflictor (userdata)
            GetAbilityPoints                	= int GetAbilityPoints()
Gets the current unspent ability points. (userdata)
            GetTimeUntilRespawn             	= float GetTimeUntilRespawn()
 (userdata)
            GetAssists                      	= int GetAssists()
Value is stored in PlayerResource. (userdata)
            GetBaseDamageMin                	= int GetBaseDamageMin()
Hero damage is also affected by attributes. (userdata)
            ClearLastHitStreak              	= void ClearLastHitStreak()
Value is stored in PlayerResource. (userdata)
            GetAttacker                     	= int GetAttacker(int nIndex)
 (userdata)
            UpgradeAbility                  	= void UpgradeAbility(handle hAbility)
This upgrades the passed ability if it exists and the hero has enough ability points. (userdata)
            IncrementKills                  	= void IncrementKills(int iVictimID)
Passed ID is for the victim, killer ID is ID of the current hero.  Value is stored in PlayerResource. (userdata)
            GetPrimaryAttribute             	= int GetPrimaryAttribute()
0 = strength, 1 = agility, 2 = intelligence. (userdata)
            IncrementAssists                	= void IncrementAssists(int iKillerID)
Value is stored in PlayerResource. (userdata)
            HasFlyingVision                 	= bool HasFlyingVision()
 (userdata)
            GetGold                         	= int GetGold()
Returns gold amount for the player owning this hero (userdata)
            GetKills                        	= int GetKills()
Value is stored in PlayerResource. (userdata)
            IncrementNearbyCreepDeaths      	= void IncrementNearbyCreepDeaths()
Value is stored in PlayerResource. (userdata)
            SpendGold                       	= void SpendGold(int iCost, int iReason)
Args: int nGold, int nReason (userdata)
            HasOwnerAbandoned               	= bool HasOwnerAbandoned()
 (userdata)
            WillReincarnate                 	= bool WillReincarnate()
 (userdata)
            AddExperience                   	= bool AddExperience(float flXP, int nReason, bool bApplyBotDifficultyScaling, bool bIncrementTotal)
Params: Float XP, Bool applyBotDifficultyScaling (userdata)
            SetPlayerID                     	= void SetPlayerID(int iPlayerID)
 (userdata)
            RecordLastHit                   	= void RecordLastHit()
 (userdata)
            IncrementLastHits               	= void IncrementLastHits()
Value is stored in PlayerResource. (userdata)
            GetBaseDamageMax                	= int GetBaseDamageMax()
Hero damage is also affected by attributes. (userdata)
            HeroLevelUp                     	= void HeroLevelUp(bool bPlayEffects)
Levels up the hero, true or false to play effects. (userdata)
            SetBuyBackDisabledByReapersScythe	= void SetBuyBackDisabledByReapersScythe(bool bBuybackDisabled)
 (userdata)
            Buyback                         	= void Buyback()
Spend the gold and buyback with this hero. (userdata)
            GetAdditionalOwnedUnits         	= table GetAdditionalOwnedUnits()
 (userdata)
            GetStreak                       	= int GetStreak()
Value is stored in PlayerResource. (userdata)
            GetMostRecentDamageTime         	= float GetMostRecentDamageTime()
 (userdata)
            SetBaseStrength                 	= void SetBaseStrength(float flStrength)
 (userdata)
            SetRespawnsDisabled             	= void SetRespawnsDisabled(bool bDisableRespawns)
Prevent this hero from respawning. (userdata)
            GetTogglableWearable            	= handle GetTogglableWearable(int nSlotType)
Get wearable entity in slot (slot) (userdata)
            GetBuybackGoldLimitTime         	= float GetBuybackGoldLimitTime()
Returns the amount of time gold gain is limited after buying back. (userdata)
            GetStrengthGain                 	= float GetStrengthGain()
 (userdata)
            IncrementDeaths                 	= void IncrementDeaths(int iKillerID)
Value is stored in PlayerResource. (userdata)
            ModifyStrength                  	= void ModifyStrength(float flNewStrength)
Adds passed value to base attribute value, then calls CalculateStatBonus. (userdata)
            ModifyAgility                   	= void ModifyAgility(float flNewAgility)
Adds passed value to base attribute value, then calls CalculateStatBonus. (userdata)
            GetIntellectGain                	= float GetIntellectGain()
 (userdata)
            GetRespawnTime                  	= float GetRespawnTime()
 (userdata)
            IncrementLastHitStreak          	= void IncrementLastHitStreak()
Value is stored in PlayerResource. (userdata)
            GetBaseIntellect                	= float GetBaseIntellect()
 (userdata)
            GetPhysicalArmorBaseValue       	= float GetPhysicalArmorBaseValue()
Hero armor is affected by attributes. (userdata)
            SetCustomDeathXP                	= void SetCustomDeathXP(int iValue)
Sets a custom experience value for this hero.  Note, GameRules boolean must be set for this to work! (userdata)
            GetBonusDamageFromPrimaryStat   	= int GetBonusDamageFromPrimaryStat()
 (userdata)
            IncrementDenies                 	= void IncrementDenies()
Value is stored in PlayerResource. (userdata)
            GetDeaths                       	= int GetDeaths()
Value is stored in PlayerResource. (userdata)
         }
         IsNull                          	= function: 0x0018b2f8 (function)
         SetBotDifficulty                	= function: 0x001982a8 (function)
         IncrementLastHitMultikill       	= function: 0x001963f8 (function)
         RespawnHero                     	= function: 0x0018be68 (function)
         GetBaseStrength                 	= function: 0x0018bc70 (function)
         GetDeathGoldCost                	= function: 0x0018b838 (function)
         GetNumItemsInStash              	= function: 0x00195be8 (function)
         ClearLastHitMultikill           	= function: 0x00196488 (function)
         ModifyGold                      	= function: 0x00195410 (function)
         GetPrimaryStatValue             	= function: 0x00195650 (function)
         ClearStreak                     	= function: 0x00196810 (function)
         SetStashEnabled                 	= function: 0x001983b8 (function)
         GetAgility                      	= function: 0x0018bb70 (function)
         SetBuybackGoldLimitTime         	= function: 0x0018b748 (function)
         CalculateStatBonus              	= function: 0x0018b380 (function)
         GetBuybackCooldownTime          	= function: 0x0018c830 (function)
         GetGoldBounty                   	= function: 0x001956d8 (function)
         IncrementStreak                 	= function: 0x00196790 (function)
         IncrementDeaths_Engine          	= function: 0x00195fc8 (function)
         IsBuybackDisabledByReapersScythe	= function: 0x0018b930 (function)
         AddExperience_Engine            	= function: 0x0018bac8 (function)
         IsStashEnabled                  	= function: 0x00198438 (function)
         SetRespawnPosition              	= function: 0x00198330 (function)
         GetBaseManaRegen                	= function: 0x0018c2f8 (function)
         GetBuybackCost                  	= function: 0x0018c7b0 (function)
         Buyback                         	= function: 0x0018c738 (function)
         CanEarnGold                     	= function: 0x0018b550 (function)
         GetStrength                     	= function: 0x0018b9c8 (function)
         GetAgilityGain                  	= function: 0x0018c3d0 (function)
         GetNumAttackers                 	= function: 0x00195730 (function)
         GetCurrentXP                    	= function: 0x001980a0 (function)
         GetBaseDamageMin                	= function: 0x0018bee8 (function)
         PerformTaunt                    	= function: 0x00195e08 (function)
         SetPrimaryAttribute             	= function: 0x00195d80 (function)
         SetAbilityPoints                	= function: 0x0018bd58 (function)
         GetGold                         	= function: 0x00195568 (function)
         ModifyIntellect                 	= function: 0x0018c5d8 (function)
         GetNumItemsInInventory          	= function: 0x00195c70 (function)
         HasAnyAvailableInventorySpace   	= function: 0x00195b58 (function)
         HasRoomForItem                  	= function: 0x00195ad8 (function)
         SetBaseAgility                  	= function: 0x0018c120 (function)
         SetTimeUntilRespawn             	= function: 0x00195940 (function)
         SetGold                         	= function: 0x00195490 (function)
         GetTimeUntilRespawn             	= function: 0x001958b8 (function)
         KilledHero                      	= function: 0x00195390 (function)
         GetAbilityPoints                	= function: 0x0018bcd0 (function)
         GetIncreasedAttackSpeed         	= function: 0x0018c688 (function)
         GetAssists                      	= function: 0x00196610 (function)
         GetAttacker                     	= function: 0x001957b0 (function)
         GetDeaths                       	= function: 0x00196590 (function)
         SetBuybackCooldownTime          	= function: 0x0018c8b8 (function)
         UpgradeAbility                  	= function: 0x0018c6e0 (function)
         IncrementKills                  	= function: 0x00195f48 (function)
         GetPrimaryAttribute             	= function: 0x00195cf8 (function)
         IncrementAssists                	= function: 0x00196048 (function)
         HasFlyingVision                 	= function: 0x0018b4f8 (function)
         SpendGold                       	= function: 0x001954e8 (function)
         GetKills                        	= function: 0x00196510 (function)
         IncrementNearbyCreepDeaths      	= function: 0x001961d8 (function)
         GetMultipleKillCount            	= function: 0x00195308 (function)
         HasOwnerAbandoned               	= function: 0x00198220 (function)
         WillReincarnate                 	= function: 0x001981a0 (function)
         AddExperience                   	= function: 0x001e29d8 (function)
         GetPhysicalArmorBaseValue       	= function: 0x0018c2a0 (function)
         RecordLastHit                   	= function: 0x00196268 (function)
         IncrementLastHits               	= function: 0x001960d0 (function)
         HeroLevelUp                     	= function: 0x0018ba48 (function)
         SetCustomDeathXP                	= function: 0x0018bde0 (function)
         SetBuyBackDisabledByReapersScythe	= function: 0x0018b898 (function)
         GetBuybackGoldLimitTime         	= function: 0x0018b408 (function)
         GetAdditionalOwnedUnits         	= function: 0x00195ec0 (function)
         GetStreak                       	= function: 0x00195288 (function)
         GetMostRecentDamageTime         	= function: 0x00195830 (function)
         SetBaseStrength                 	= function: 0x0018c0a0 (function)
         SetRespawnsDisabled             	= function: 0x00195a50 (function)
         GetTogglableWearable            	= function: 0x0018b320 (function)
         SetBaseIntellect                	= function: 0x0018c1a0 (function)
         GetStrengthGain                 	= function: 0x0018c228 (function)
         IncrementDeaths                 	= function: 0x001e29f8 (function)
         ModifyAgility                   	= function: 0x0018c558 (function)
         ModifyStrength                  	= function: 0x0018c4d8 (function)
         GetIntellectGain                	= function: 0x0018c450 (function)
         GetRespawnTime                  	= function: 0x0018c658 (function)
         GetBaseDamageMax                	= function: 0x0018bf40 (function)
         GetBaseIntellect                	= function: 0x0018c018 (function)
         SetPlayerID                     	= function: 0x0018b7b8 (function)
         ClearLastHitStreak              	= function: 0x00196370 (function)
         GetBonusDamageFromPrimaryStat   	= function: 0x001955c0 (function)
         IncrementDenies                 	= function: 0x00196158 (function)
         IncrementLastHitStreak          	= function: 0x001962e8 (function)
         ForceKill                       	= function: 0x0018e830 (function)
         InterruptMotionControllers      	= function: 0x001899d0 (function)
         GetBaseDayTimeVisionRange       	= function: 0x00188798 (function)
         PassivesDisabled                	= function: 0x0018d898 (function)
         IsNull                          	= function: 0x00184038 (function)
         CastAbilityNoTarget             	= function: 0x00188120 (function)
         ShouldIdleAcquire               	= function: 0x00189c90 (function)
         GetCastRangeBonus               	= function: 0x00187420 (function)
         RemoveModifierByName            	= function: 0x00189fb8 (function)
         DropItemAtPositionImmediate     	= function: 0x0018a3f8 (function)
         IsClone                         	= function: 0x00184890 (function)
         GetPaddedCollisionRadius        	= function: 0x00185250 (function)
         GetAttackSpeed                  	= function: 0x00187290 (function)
         GetManaRegen                    	= function: 0x001898c8 (function)
         MoveToTargetToAttack            	= function: 0x00184bb8 (function)
         GetCurrentVisionRange           	= function: 0x00188a50 (function)
         SetMana                         	= function: 0x00186a40 (function)
         IsCommandRestricted             	= function: 0x0018d580 (function)
         GetRangeToUnit                  	= function: 0x00189b88 (function)
         GetDisplayAttackSpeed           	= function: 0x00187310 (function)
         SetNightTimeVisionRange         	= function: 0x001889c8 (function)
         IsAncient                       	= function: 0x00184628 (function)
         SetStolenScepter                	= function: 0x0018df38 (function)
         IsPhantom                       	= function: 0x00188528 (function)
         GetAttackDamage                 	= function: 0x00185b08 (function)
         GetLastAttackTime               	= function: 0x0018ea40 (function)
         Stop                            	= function: 0x00188388 (function)
         GetAbilityByIndex               	= function: 0x00187df8 (function)
         SetOriginalModel                	= function: 0x0018a8c0 (function)
         RemoveItem                      	= function: 0x00185068 (function)
         GetNightTimeVisionRange         	= function: 0x001888b0 (function)
         InterruptChannel                	= function: 0x00189948 (function)
         StopFacing                      	= function: 0x00184350 (function)
         IsHexed                         	= function: 0x0018cf80 (function)
         IsInvulnerable                  	= function: 0x0018d078 (function)
         GetAttackRangeBuffer            	= function: 0x001859f8 (function)
         GetBaseNightTimeVisionRange     	= function: 0x00188938 (function)
         RemoveAbilityByHandle           	= function: 0x00186618 (function)
         IsOther                         	= function: 0x00185e50 (function)
         RemoveNoDraw                    	= function: 0x0018ae48 (function)
         ReduceMana                      	= function: 0x00185688 (function)
         GetDayTimeVisionRange           	= function: 0x00188710 (function)
         MoveToNPC                       	= function: 0x00185608 (function)
         TakeItem                        	= function: 0x001850e8 (function)
         RemoveModifierByNameAndCaster   	= function: 0x00189f28 (function)
         GetProjectileSpeed              	= function: 0x0018e518 (function)
         AddSpeechBubble                 	= function: 0x0018a948 (function)
         IsOpposingTeam                  	= function: 0x0018a488 (function)
         IsUntargetable                  	= function: 0x0018da98 (function)
         FindAllModifiersByName          	= function: 0x0018a1e0 (function)
         ModifyHealth                    	= function: 0x001869c0 (function)
         SetBaseMagicalResistanceValue   	= function: 0x00189698 (function)
         HasScepter                      	= function: 0x0018deb8 (function)
         HasItemInInventory              	= function: 0x0018dda8 (function)
         SetHasInventory                 	= function: 0x0018cba8 (function)
         GetBaseHealthRegen              	= function: 0x00186cf8 (function)
         Script_GetAttackRange           	= function: 0x00185970 (function)
         GetPhysicalArmorValue           	= function: 0x00189468 (function)
         IsHardDisarmed                  	= function: 0x001e2978 (function)
         GetMana                         	= function: 0x00186b18 (function)
         SetInitialGoalPosition          	= function: 0x001849a0 (function)
         SpendMana                       	= function: 0x00185788 (function)
         IsChanneling                    	= function: 0x0018f1a0 (function)
         HasGroundMovementCapability     	= function: 0x0018e158 (function)
         GetMagicalArmorValue            	= function: 0x001894f0 (function)
         SetUnitName                     	= function: 0x0018e6b0 (function)
         IsAttackImmune                  	= function: 0x0018cda8 (function)
         SetBaseHealthRegen              	= function: 0x00186c70 (function)
         MakeVisibleDueToAttack          	= function: 0x0018a618 (function)
         SetMaximumGoldBounty            	= function: 0x00188ce8 (function)
         GetBaseDamageMax                	= function: 0x001892d0 (function)
         SetMustReachEachGoalEntity      	= function: 0x00184460 (function)
         GetMustReachEachGoalEntity      	= function: 0x001844f0 (function)
         GetMaximumGoldBounty            	= function: 0x00188d70 (function)
         IsStunned                       	= function: 0x0018cf00 (function)
         FindModifierByName              	= function: 0x0018a040 (function)
         AddActivityModifier             	= function: 0x00187738 (function)
         Script_IsDeniable               	= function: 0x0018dc98 (function)
         IsInvisible                     	= function: 0x0018cff8 (function)
         IsBlind                         	= function: 0x0018d9a0 (function)
         IsDominated                     	= function: 0x0018d920 (function)
         AddItem                         	= function: 0x001863c0 (function)
         GetEvasion                      	= function: 0x00186728 (function)
         StartGesture                    	= function: 0x001877c0 (function)
         GetHasteFactor                  	= function: 0x001871b8 (function)
         GetCastPoint                    	= function: 0x00187238 (function)
         SetCursorTargetingNothing       	= function: 0x0018c960 (function)
         TimeUntilNextAttack             	= function: 0x0018e9b8 (function)
         IsLowAttackPriority             	= function: 0x0018d710 (function)
         IsRooted                        	= function: 0x0018cca8 (function)
         GetSecondsPerAttack             	= function: 0x00187130 (function)
         ClearActivityModifiers          	= function: 0x001876b0 (function)
         IsUnselectable                  	= function: 0x0018d3f8 (function)
         GetIncreasedAttackSpeed         	= function: 0x00187020 (function)
         RemoveHorizontalMotionController	= function: 0x00189a60 (function)
         IsNeutralUnitType               	= function: 0x001846a8 (function)
         GetBaseMagicalResistanceValue   	= function: 0x00189728 (function)
         GetInitialGoalPosition          	= function: 0x00184a28 (function)
         SetAttacking                    	= function: 0x0018ec58 (function)
         NoTeamSelect                    	= function: 0x0018d818 (function)
         NoTeamMoveTo                    	= function: 0x0018db98 (function)
         SetAdditionalBattleMusicWeight  	= function: 0x0018ef70 (function)
         FindItemInInventory             	= function: 0x0018de30 (function)
         SetMoveCapability               	= function: 0x0018e0d0 (function)
         IsBlockDisabled                 	= function: 0x0018d2f8 (function)
         IsControllableByAnyPlayer       	= function: 0x00188f10 (function)
         GetModifierStackCount           	= function: 0x0018a2e8 (function)
         IsTempestDouble                 	= function: 0x00187630 (function)
         CanEntityBeSeenByMyTeam         	= function: 0x00188688 (function)
         GetAbilityCount                 	= function: 0x00187e80 (function)
         IsIllusion                      	= function: 0x00187530 (function)
         GetPlayerOwnerID                	= function: 0x00189140 (function)
         EjectItemFromStash              	= function: 0x00184fe0 (function)
         SetRangedProjectileName         	= function: 0x0018e5a0 (function)
         FDesc                           	= table: 0x00184098 (table)
         {
            ForceKill                       	= void ForceKill(bool bReincarnate)
Kill this unit immediately. (userdata)
            InterruptMotionControllers      	= void InterruptMotionControllers(bool bFindClearSpace)
 (userdata)
            GetBaseDayTimeVisionRange       	= int GetBaseDayTimeVisionRange()
Returns the vision range before modifiers. (userdata)
            PassivesDisabled                	= bool PassivesDisabled()
 (userdata)
            CastAbilityNoTarget             	= void CastAbilityNoTarget(handle hAbility, int iPlayerIndex)
Cast an ability with no target. (userdata)
            ShouldIdleAcquire               	= bool ShouldIdleAcquire()
 (userdata)
            GetCastRangeBonus               	= float GetCastRangeBonus()
 (userdata)
            RemoveModifierByName            	= void RemoveModifierByName(string pszScriptName)
Removes a modifier. (userdata)
            DropItemAtPositionImmediate     	= void DropItemAtPositionImmediate(handle hItem, Vector vPosition)
Immediately drop a carried item at a given position. (userdata)
            IsClone                         	= bool IsClone()
Is this unit a clone? (Meepo) (userdata)
            GetPaddedCollisionRadius        	= float GetPaddedCollisionRadius()
Get the collision hull radius (including padding) of this NPC. (userdata)
            GetAttackSpeed                  	= float GetAttackSpeed()
 (userdata)
            GetManaRegen                    	= float GetManaRegen()
 (userdata)
            MoveToTargetToAttack            	= void MoveToTargetToAttack(handle hTarget)
Move to a target to attack. (userdata)
            GetCurrentVisionRange           	= int GetCurrentVisionRange()
Gets the current vision range. (userdata)
            SetMana                         	= void SetMana(float flMana)
Set the mana on this unit. (userdata)
            Interrupt                       	= void Interrupt()
 (userdata)
            GetRangeToUnit                  	= float GetRangeToUnit(handle hNPC)
 (userdata)
            GetDisplayAttackSpeed           	= float GetDisplayAttackSpeed()
Attack speed expressed as constant value (userdata)
            SetNightTimeVisionRange         	= void SetNightTimeVisionRange(int iRange)
Returns the vision range after modifiers. (userdata)
            IsAncient                       	= bool IsAncient()
Is this unit an Ancient? (userdata)
            SetStolenScepter                	= void SetStolenScepter(bool bStolenScepter)
 (userdata)
            IsPhantom                       	= bool IsPhantom()
Is this a phantom unit? (userdata)
            GetAttackDamage                 	= int GetAttackDamage()
Returns a random integer between the minimum and maximum base damage of the unit. (userdata)
            GetLastAttackTime               	= float GetLastAttackTime()
 (userdata)
            Stop                            	= void Stop()
Stop the current order. (userdata)
            GetAbilityByIndex               	= handle GetAbilityByIndex(int iIndex)
Retrieve an ability by index from the unit. (userdata)
            SetOriginalModel                	= void SetOriginalModel(string pszModelName)
Sets the original model of this entity, which it will tend to fall back to anytime its state changes. (userdata)
            RemoveItem                      	= void RemoveItem(handle hItem)
Removes the passed item from this unit's inventory and deletes it. (userdata)
            GetNightTimeVisionRange         	= int GetNightTimeVisionRange()
Returns the vision range after modifiers. (userdata)
            InterruptChannel                	= void InterruptChannel()
 (userdata)
            StopFacing                      	= void StopFacing()
 (userdata)
            IsHexed                         	= bool IsHexed()
 (userdata)
            IsInvulnerable                  	= bool IsInvulnerable()
 (userdata)
            GetAttackRangeBuffer            	= float GetAttackRangeBuffer()
Gets the attack range buffer. (userdata)
            GetBaseNightTimeVisionRange     	= int GetBaseNightTimeVisionRange()
Returns the vision range after modifiers. (userdata)
            RemoveAbilityByHandle           	= void RemoveAbilityByHandle(handle hAbility)
Remove the passed ability from this unit. (userdata)
            IsOther                         	= bool IsOther()
Is this unit a ward-type unit? (userdata)
            RemoveNoDraw                    	= void RemoveNoDraw()
Remove the no draw flag. (userdata)
            GetManaPercent                  	= int GetManaPercent()
Get the percent of mana remaining. (userdata)
            GetDayTimeVisionRange           	= int GetDayTimeVisionRange()
Returns the vision range after modifiers. (userdata)
            MoveToNPC                       	= void MoveToNPC(handle hNPC)
Move to follow a unit. (userdata)
            TakeItem                        	= handle TakeItem(handle hItem)
Removed the passed item from this unit's inventory. (userdata)
            RemoveModifierByNameAndCaster   	= void RemoveModifierByNameAndCaster(string pszScriptName, handle hCaster)
Removes a modifier that was cast by the given caster. (userdata)
            GetProjectileSpeed              	= int GetProjectileSpeed()
 (userdata)
            AddSpeechBubble                 	= void AddSpeechBubble(int iBubble, string pszSpeech, float flDuration, unsigned unOffsetX, unsigned unOffsetY)
Add a speech bubble(1-4 live at a time) to this NPC. (userdata)
            IsOpposingTeam                  	= bool IsOpposingTeam(int nTeam)
 (userdata)
            IsUntargetable                  	= bool IsUntargetable()
 (userdata)
            FindAllModifiersByName          	= table FindAllModifiersByName(string pszScriptName)
Returns a table of all of the modifiers on the NPC with the passed name (modifierName) (userdata)
            NoHealthBar                     	= bool NoHealthBar()
 (userdata)
            SetBaseMagicalResistanceValue   	= void SetBaseMagicalResistanceValue(float flMagicalResistanceValue)
Sets base magical armor value. (userdata)
            HasScepter                      	= bool HasScepter()
 (userdata)
            HasItemInInventory              	= bool HasItemInInventory(string pItemName)
See whether this unit has an item by name. (userdata)
            SetHasInventory                 	= void SetHasInventory(bool bHasInventory)
Set if this unit has an inventory. (userdata)
            GetBaseHealthRegen              	= float GetBaseHealthRegen()
 (userdata)
            Script_GetAttackRange           	= float Script_GetAttackRange()
Gets this unit's attack range after all modifiers. (userdata)
            GetPhysicalArmorValue           	= float GetPhysicalArmorValue(bool bIgnoreBase)
Returns current physical armor value. (userdata)
            GetMana                         	= float GetMana()
Get the mana on this unit. (userdata)
            SetInitialGoalPosition          	= void SetInitialGoalPosition(Vector vPosition)
Set waypoint position for this NPC. (userdata)
            SpendMana                       	= void SpendMana(float flManaSpent, handle hAbility)
Spend mana from this unit, this can be used for spending mana from abilities or item usage. (userdata)
            IsChanneling                    	= bool IsChanneling()
Is this unit currently channeling a spell? (userdata)
            HasGroundMovementCapability     	= bool HasGroundMovementCapability()
 (userdata)
            GetMagicalArmorValue            	= float GetMagicalArmorValue()
Returns current magical armor value. (userdata)
            SetUnitName                     	= void SetUnitName(string pName)
 (userdata)
            IsAttackImmune                  	= bool IsAttackImmune()
 (userdata)
            SetBaseHealthRegen              	= void SetBaseHealthRegen(float flHealthRegen)
 (userdata)
            MakeVisibleDueToAttack          	= void MakeVisibleDueToAttack(int iTeam, float flRadius)
 (userdata)
            SetMaximumGoldBounty            	= void SetMaximumGoldBounty(int iGoldBountyMax)
Set the maximum gold bounty for this unit. (userdata)
            GetBaseDamageMax                	= int GetBaseDamageMax()
Get the maximum attack damage of this unit. (userdata)
            SetMustReachEachGoalEntity      	= void SetMustReachEachGoalEntity(bool must)
Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path. (userdata)
            GetMustReachEachGoalEntity      	= bool GetMustReachEachGoalEntity()
Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path. (userdata)
            GetMaximumGoldBounty            	= int GetMaximumGoldBounty()
Get the maximum gold bounty for this unit. (userdata)
            IsStunned                       	= bool IsStunned()
 (userdata)
            FindModifierByName              	= handle FindModifierByName(string pszScriptName)
Return a handle to the modifier of the given name if found, else nil (string Name ) (userdata)
            AddActivityModifier             	= void AddActivityModifier(string szName)
Add an activity modifier that affects future StartGesture calls (userdata)
            Script_IsDeniable               	= bool Script_IsDeniable()
 (userdata)
            IsInvisible                     	= bool IsInvisible()
 (userdata)
            IsBlind                         	= bool IsBlind()
 (userdata)
            IsDominated                     	= bool IsDominated()
 (userdata)
            AddItem                         	= handle AddItem(handle hItem)
Add an item to this unit's inventory. (userdata)
            GetEvasion                      	= float GetEvasion()
 (userdata)
            StartGesture                    	= void StartGesture(int nActivity)
Add the given gesture activity. (userdata)
            GetHasteFactor                  	= float GetHasteFactor()
 (userdata)
            GetCastPoint                    	= float GetCastPoint(bool bAttack)
 (userdata)
            SetCursorTargetingNothing       	= void SetCursorTargetingNothing(bool bTargetingNothing)
 (userdata)
            TimeUntilNextAttack             	= float TimeUntilNextAttack()
 (userdata)
            IsLowAttackPriority             	= bool IsLowAttackPriority()
 (userdata)
            IsRooted                        	= bool IsRooted()
 (userdata)
            GetSecondsPerAttack             	= float GetSecondsPerAttack()
 (userdata)
            ClearActivityModifiers          	= void ClearActivityModifiers()
Clear Activity modifiers (userdata)
            IsUnselectable                  	= bool IsUnselectable()
 (userdata)
            GetIncreasedAttackSpeed         	= float GetIncreasedAttackSpeed()
 (userdata)
            RemoveHorizontalMotionController	= void RemoveHorizontalMotionController(handle hBuff)
 (userdata)
            IsNeutralUnitType               	= bool IsNeutralUnitType()
Is this a neutral? (userdata)
            GetBaseMagicalResistanceValue   	= float GetBaseMagicalResistanceValue()
Returns base magical armor value. (userdata)
            GetInitialGoalPosition          	= Vector GetInitialGoalPosition()
Get waypoint position for this NPC. (userdata)
            SetAttacking                    	= void SetAttacking(handle hAttackTarget)
 (userdata)
            NoTeamSelect                    	= bool NoTeamSelect()
 (userdata)
            NoTeamMoveTo                    	= bool NoTeamMoveTo()
 (userdata)
            SetAdditionalBattleMusicWeight  	= void SetAdditionalBattleMusicWeight(float flWeight)
Combat involving this creature will have this weight added to the music calcuations. (userdata)
            FindItemInInventory             	= handle FindItemInInventory(string pszItemName)
Get handle to first item in inventory, else nil. (userdata)
            SetMoveCapability               	= void SetMoveCapability(int iMoveCapabilities)
 (userdata)
            IsBlockDisabled                 	= bool IsBlockDisabled()
 (userdata)
            IsControllableByAnyPlayer       	= bool IsControllableByAnyPlayer()
Is this unit controlled by any non-bot player? (userdata)
            GetModifierStackCount           	= int GetModifierStackCount(string pszScriptName, handle hCaster)
Gets the stack count of a given modifier. (userdata)
            IsTempestDouble                 	= bool IsTempestDouble()
 (userdata)
            CanEntityBeSeenByMyTeam         	= bool CanEntityBeSeenByMyTeam(handle hEntity)
Check FoW to see if an entity is visible. (userdata)
            GetAbilityCount                 	= int GetAbilityCount()
 (userdata)
            IsIllusion                      	= bool IsIllusion()
 (userdata)
            GetPlayerOwnerID                	= int GetPlayerOwnerID()
Get the owner player ID for this unit. (userdata)
            EjectItemFromStash              	= void EjectItemFromStash(handle hItem)
Drops the selected item out of this unit's stash. (userdata)
            SetRangedProjectileName         	= void SetRangedProjectileName(string pProjectileName)
 (userdata)
            IsMuted                         	= bool IsMuted()
 (userdata)
            IsAttackingEntity               	= bool IsAttackingEntity(handle hEntity)
 (userdata)
            IsPhantomBlocker                	= bool IsPhantomBlocker()
 (userdata)
            FaceTowards                     	= void FaceTowards(Vector vTarget)
This unit will be set to face the target point. (userdata)
            SetDayTimeVisionRange           	= void SetDayTimeVisionRange(int iRange)
Set the base vision range. (userdata)
            RemoveGesture                   	= void RemoveGesture(int nActivity)
Remove the given gesture activity. (userdata)
            GetAverageTrueAttackDamage      	= int GetAverageTrueAttackDamage(handle hTarget)
Returns the average value of the minimum and maximum damage values. (userdata)
            DestroyAllSpeechBubbles         	= void DestroyAllSpeechBubbles()
 (userdata)
            FindAllModifiers                	= table FindAllModifiers()
Returns a table of all of the modifiers on the NPC. (userdata)
            AlertNearbyUnits                	= void AlertNearbyUnits(handle hAttacker, handle hAbility)
 (userdata)
            GetRangedProjectileName         	= string GetRangedProjectileName()
 (userdata)
            NotOnMinimap                    	= bool NotOnMinimap()
 (userdata)
            GetHealthDeficit                	= int GetHealthDeficit()
Returns integer amount of health missing from max. (userdata)
            GetInitialGoalEntity            	= handle GetInitialGoalEntity()
Returns the initial waypoint goal for this NPC. (userdata)
            GetCursorTargetingNothing       	= bool GetCursorTargetingNothing()
 (userdata)
            IsConsideredHero                	= bool IsConsideredHero()
Is this unit a considered a hero for targeting purposes? (userdata)
            CanSellItems                    	= bool CanSellItems()
Query if this unit can sell items. (userdata)
            HasMovementCapability           	= bool HasMovementCapability()
 (userdata)
            GetLastDamageTime               	= float GetLastDamageTime()
Get the last time this NPC took damage (userdata)
            RemoveAbility                   	= void RemoveAbility(string pszAbilityName)
Remove an ability from this unit by name. (userdata)
            SetForceAttackTargetAlly        	= void SetForceAttackTargetAlly(handle hNPC)
 (userdata)
            SetModifierStackCount           	= void SetModifierStackCount(string pszScriptName, handle hCaster, int nStackCount)
Sets the stack count of a given modifier. (userdata)
            SetInitialGoalEntity            	= void SetInitialGoalEntity(handle hGoal)
Sets the initial waypoint goal for this NPC. (userdata)
            IsOutOfGame                     	= bool IsOutOfGame()
 (userdata)
            NotOnMinimapForEnemies          	= bool NotOnMinimapForEnemies()
 (userdata)
            DisassembleItem                 	= void DisassembleItem(handle hItem)
Disassemble the passed item in this unit's inventory. (userdata)
            GetSpellAmplification           	= float GetSpellAmplification(bool bBaseOnly)
 (userdata)
            AttackReady                     	= bool AttackReady()
 (userdata)
            SetBaseDamageMin                	= void SetBaseDamageMin(int nMin)
Sets the minimum base damage. (userdata)
            IsFrozen                        	= bool IsFrozen()
 (userdata)
            DropItemAtPosition              	= void DropItemAtPosition(Vector vDest, handle hItem)
Drop an item at a given point. (userdata)
            GetModifierCount                	= int GetModifierCount()
How many modifiers does this unit have? (userdata)
            SetCursorPosition               	= void SetCursorPosition(Vector vLocation)
 (userdata)
            GetHullRadius                   	= float GetHullRadius()
Get the collision hull radius of this NPC. (userdata)
            SetControllableByPlayer         	= void SetControllableByPlayer(int iIndex, bool bSkipAdjustingPosition)
Set this unit controllable by the player with the passed ID. (userdata)
            SetBaseManaRegen                	= void SetBaseManaRegen(float flManaRegen)
 (userdata)
            GetCursorPosition               	= Vector GetCursorPosition()
 (userdata)
            GetBaseAttackTime               	= float GetBaseAttackTime()
 (userdata)
            IsUnableToMiss                  	= bool IsUnableToMiss()
 (userdata)
            SetCustomHealthLabel            	= void SetCustomHealthLabel(string pLabel, int r, int g, int b)
 (userdata)
            HasAttackCapability             	= bool HasAttackCapability()
 (userdata)
            GetAttacksPerSecond             	= float GetAttacksPerSecond()
 (userdata)
            AttackNoEarlierThan             	= void AttackNoEarlierThan(float flTime)
 (userdata)
            Purge                           	= void Purge(bool bRemovePositiveBuffs, bool bRemoveDebuffs, bool bFrameOnly, bool bRemoveStuns, bool bRemoveExceptions)
(bool RemovePositiveBuffs, bool RemoveDebuffs, bool BuffsCreatedThisFrameOnly, bool RemoveStuns, bool RemoveExceptions (userdata)
            SetShouldDoFlyHeightVisual      	= void SetShouldDoFlyHeightVisual(bool bShouldVisuallyFly)
 (userdata)
            IsCreature                      	= bool IsCreature()
Is this a Creature type NPC? (userdata)
            IsCourier                       	= bool IsCourier()
Is this unit a courier? (userdata)
            PerformAttack                   	= void PerformAttack(handle hTarget, bool bUseCastAttackOrb, bool bProcessProcs, bool bSkipCooldown, bool bIgnoreInvis, bool bUseProjectile, bool bFakeAttack, bool bNeverMiss)
Performs an attack on a target. (userdata)
            GetDeathXP                      	= int GetDeathXP()
Get the XP bounty on this unit. (userdata)
            SetCursorCastTarget             	= void SetCursorCastTarget(handle hEntity)
 (userdata)
            SetOrigin                       	= void SetOrigin(Vector vLocation)
Set the unit's origin. (userdata)
            SetAttackCapability             	= void SetAttackCapability(int iAttackCapabilities)
 (userdata)
            NoUnitCollision                 	= bool NoUnitCollision()
 (userdata)
            GetBaseDamageMin                	= int GetBaseDamageMin()
Get the minimum attack damage of this unit. (userdata)
            SetCanSellItems                 	= void SetCanSellItems(bool bCanSell)
Set whether or not this unit is allowed to sell items (bCanSellItems) (userdata)
            ForcePlayActivityOnce           	= void ForcePlayActivityOnce(int nActivity)
Play an activity once, and then go back to idle. (userdata)
            SetIdleAcquire                  	= void SetIdleAcquire(bool bIdleAcquire)
 (userdata)
            Heal                            	= void Heal(float flAmount, handle hInflictor)
Heal this unit. (userdata)
            AddNoDraw                       	= void AddNoDraw()
Adds the no draw flag. (userdata)
            SetUnitCanRespawn               	= void SetUnitCanRespawn(bool bCanRespawn)
 (userdata)
            SetDeathXP                      	= void SetDeathXP(int iXPBounty)
Set the XP bounty on this unit. (userdata)
            GetPlayerOwner                  	= handle GetPlayerOwner()
Returns the player that owns this unit. (userdata)
            GetCreationTime                 	= float GetCreationTime()
 (userdata)
            GetCooldownReduction            	= float GetCooldownReduction()
 (userdata)
            AngerNearbyUnits                	= void AngerNearbyUnits()
 (userdata)
            RespawnUnit                     	= void RespawnUnit()
Respawns the target unit if it can be respawned. (userdata)
            GetMoveSpeedModifier            	= float GetMoveSpeedModifier(float flBaseSpeed, bool bReturnUnslowed)
 (userdata)
            UnitCanRespawn                  	= bool UnitCanRespawn()
 (userdata)
            AddNewModifier                  	= handle AddNewModifier(handle hCaster, handle hAbility, string pszScriptName, handle hModifierTable)
Add a modifier to this unit. (userdata)
            SwapAbilities                   	= void SwapAbilities(string pAbilityName1, string pAbilityName2, bool bEnable1, bool bEnable2)
Swaps the slots of the two passed abilities and sets them enabled/disabled. (userdata)
            NotifyWearablesOfModelChange    	= void NotifyWearablesOfModelChange(bool bOriginalModel)
 (userdata)
            IsPhased                        	= bool IsPhased()
 (userdata)
            GetModelRadius                  	= float GetModelRadius()
 (userdata)
            ManageModelChanges              	= void ManageModelChanges()
 (userdata)
            MakePhantomBlocker              	= void MakePhantomBlocker()
 (userdata)
            IsShrine                        	= bool IsShrine()
Is this a shrine? (userdata)
            BoundingRadius2D                	= float BoundingRadius2D()
 (userdata)
            MakeVisibleToTeam               	= void MakeVisibleToTeam(int iTeam, float flDuration)
 (userdata)
            GetOpposingTeamNumber           	= int GetOpposingTeamNumber()
 (userdata)
            HasModifier                     	= bool HasModifier(string pszScriptName)
Sees if this unit has a given modifier. (userdata)
            SellItem                        	= void SellItem(handle hItem)
Sells the passed item in this unit's inventory. (userdata)
            FindModifierByNameAndCaster     	= handle FindModifierByNameAndCaster(string pszScriptName, handle hCaster)
Return a handle to the modifier of the given name from the passed caster if found, else nil ( string Name, hCaster ) (userdata)
            GetMainControllingPlayer        	= int GetMainControllingPlayer()
Returns the player ID of the controlling player. (userdata)
            SetBaseDamageMax                	= void SetBaseDamageMax(int nMax)
Sets the maximum base damage. (userdata)
            IsPositionInRange               	= bool IsPositionInRange(Vector vPosition, float flRange)
 (userdata)
            RemoveVerticalMotionController  	= void RemoveVerticalMotionController(handle hBuff)
 (userdata)
            GetIdealSpeedNoSlows            	= float GetIdealSpeedNoSlows()
Returns speed after all modifiers, but excluding those that reduce speed. (userdata)
            GetCurrentActiveAbility         	= handle GetCurrentActiveAbility()
Get the ability this unit is currently casting. (userdata)
            IsRangedAttacker                	= bool IsRangedAttacker()
Is this unit a ranged attacker? (userdata)
            GetUnitLabel                    	= string GetUnitLabel()
 (userdata)
            SetBaseMoveSpeed                	= void SetBaseMoveSpeed(int iMoveSpeed)
 (userdata)
            GetBonusManaRegen               	= float GetBonusManaRegen()
This Mana regen is derived from constant bonuses like Basilius. (userdata)
            FindAbilityByName               	= handle FindAbilityByName(string pAbilityName)
Retrieve an ability by name from the unit. (userdata)
            GetItemInSlot                   	= handle GetItemInSlot(int i)
Returns nth item in inventory slot (index is zero based). (userdata)
            IsOwnedByAnyPlayer              	= bool IsOwnedByAnyPlayer()
Is this unit owned by any non-bot player? (userdata)
            PickupDroppedItem               	= void PickupDroppedItem(handle hItem)
Pick up a dropped item. (userdata)
            GetLastIdleChangeTime           	= float GetLastIdleChangeTime()
Get the last game time that this unit switched to/from idle state. (userdata)
            SetHullRadius                   	= void SetHullRadius(float flHullRadius)
Set the collision hull radius of this NPC. (userdata)
            GiveMana                        	= void GiveMana(float flMana)
Give mana to this unit, this can be used for mana gained by abilities or item usage. (userdata)
            GetTotalPurchasedUpgradeGoldCost	= int GetTotalPurchasedUpgradeGoldCost()
Get how much gold has been spent on ability upgrades. (userdata)
            GetAttackCapability             	= int GetAttackCapability()
 (userdata)
            GetMinimumGoldBounty            	= int GetMinimumGoldBounty()
Get the minimum gold bounty for this unit. (userdata)
            PickupRune                      	= void PickupRune(handle hItem)
Pick up a rune. (userdata)
            CastAbilityOnTarget             	= void CastAbilityOnTarget(handle hTarget, handle hAbility, int iPlayerIndex)
Cast an ability on a target entity. (userdata)
            ModifyHealth                    	= void ModifyHealth(int iDesiredHealthValue, handle hAbility, bool bLethal, int iAdditionalFlags)
Sets the health to a specific value, with optional flags or inflictors. (userdata)
            HasInventory                    	= bool HasInventory()
Does this unit have an inventory. (userdata)
            MoveToNPCToGiveItem             	= void MoveToNPCToGiveItem(handle hNPC, handle hItem)
Give an item to another unit. (userdata)
            IsMagicImmune                   	= bool IsMagicImmune()
 (userdata)
            IsTower                         	= bool IsTower()
Is this a tower? (userdata)
            IsCreep                         	= bool IsCreep()
Is this unit a creep? (userdata)
            GetCursorCastTarget             	= handle GetCursorCastTarget()
 (userdata)
            IsSummoned                      	= bool IsSummoned()
Is this unit summoned? (userdata)
            HasFlyMovementCapability        	= bool HasFlyMovementCapability()
 (userdata)
            GetStatusResistance             	= float GetStatusResistance()
 (userdata)
            IsBarracks                      	= bool IsBarracks()
Is this unit a Barracks? (userdata)
            IsSpeciallyDeniable             	= bool IsSpeciallyDeniable()
 (userdata)
            GetNeutralSpawnerName           	= string GetNeutralSpawnerName()
Get the name of this camp's neutral spawner. (userdata)
            IsNightmared                    	= bool IsNightmared()
 (userdata)
            SetForceAttackTarget            	= void SetForceAttackTarget(handle hNPC)
 (userdata)
            ReduceMana                      	= void ReduceMana(float flAmount)
Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent. (userdata)
            IsFort                          	= bool IsFort()
Is this unit an Ancient? (userdata)
            GetUnitName                     	= string GetUnitName()
Get the name of this unit. (userdata)
            SetRevealRadius                 	= void SetRevealRadius(float revealRadius)
sets the client side map reveal radius for this unit (userdata)
            GetAttackTarget                 	= handle GetAttackTarget()
 (userdata)
            IsRealHero                      	= bool IsRealHero()
Is this a real hero? (userdata)
            IsInRangeOfShop                 	= bool IsInRangeOfShop(int nShopType, bool bPhysical)
Ask whether this unit is in range of the specified shop ( DOTA_SHOP_TYPE shop, bool bMustBePhysicallyNear (userdata)
            Kill                            	= void Kill(handle hAbility, handle hAttacker)
Kills this NPC, with the params Ability and Attacker. (userdata)
            HasAnyActiveAbilities           	= bool HasAnyActiveAbilities()
 (userdata)
            Hold                            	= void Hold()
Hold position. (userdata)
            GetLevel                        	= int GetLevel()
Returns the level of this unit. (userdata)
            GetCloneSource                  	= handle GetCloneSource()
Get clone source (Meepo Prime, if this is a Meepo) (userdata)
            IsHero                          	= bool IsHero()
Is this a hero or hero illusion? (userdata)
            GetModifierNameByIndex          	= string GetModifierNameByIndex(int nIndex)
Get a modifier name by index. (userdata)
            GetCollisionPadding             	= float GetCollisionPadding()
Returns the size of the collision padding around the hull. (userdata)
            AddAbility                      	= handle AddAbility(string pszAbilityName)
Add an ability to this unit by name. (userdata)
            TriggerSpellAbsorb              	= bool TriggerSpellAbsorb(handle hAbility)
 (userdata)
            IsAttacking                     	= bool IsAttacking()
 (userdata)
            SetAggroTarget                  	= void SetAggroTarget(handle hAggroTarget)
Set this unit's aggro target to a specified unit. (userdata)
            GetForceAttackTarget            	= handle GetForceAttackTarget()
 (userdata)
            GetAttackAnimationPoint         	= float GetAttackAnimationPoint()
 (userdata)
            MoveToPosition                  	= void MoveToPosition(Vector vDest)
Issue a Move-To command. (userdata)
            MakeIllusion                    	= void MakeIllusion()
 (userdata)
            GetBaseAttackRange              	= int GetBaseAttackRange()
 (userdata)
            SetPhysicalArmorBaseValue       	= void SetPhysicalArmorBaseValue(float flPhysicalArmorValue)
Sets base physical armor value. (userdata)
            GetBaseMoveSpeed                	= float GetBaseMoveSpeed()
 (userdata)
            GetIdealSpeed                   	= float GetIdealSpeed()
Returns speed after all modifiers. (userdata)
            GetMaxMana                      	= float GetMaxMana()
Get the maximum mana of this unit. (userdata)
            GetHealthRegen                  	= float GetHealthRegen()
 (userdata)
            PatrolToPosition                	= void PatrolToPosition(Vector vDest)
Issue a Patrol-To command. (userdata)
            SwapItems                       	= void SwapItems(int nSlot1, int nSlot2)
Swap the contents of two item slots (slot1, slot2) (userdata)
            MoveToPositionAggressive        	= void MoveToPositionAggressive(Vector vDest)
Issue an Attack-Move-To command. (userdata)
            ProvidesVision                  	= bool ProvidesVision()
 (userdata)
            IsEvadeDisabled                 	= bool IsEvadeDisabled()
 (userdata)
            GetNeverMoveToClearSpace        	= bool GetNeverMoveToClearSpace()
If set to true, we will never attempt to move this unit to clear space, even when it unphases. (userdata)
            TriggerModifierDodge            	= bool TriggerModifierDodge()
 (userdata)
            HasFlyingVision                 	= bool HasFlyingVision()
 (userdata)
            SetAbilityByIndex               	= void SetAbilityByIndex(handle hAbility, int iIndex)
Set the ability by index. (userdata)
            GetAggroTarget                  	= handle GetAggroTarget()
Returns this unit's aggro target. (userdata)
            SetBaseAttackTime               	= void SetBaseAttackTime(float flBaseAttackTime)
 (userdata)
            FadeGesture                     	= void FadeGesture(int nActivity)
Fade and remove the given gesture activity. (userdata)
            GetGoldBounty                   	= int GetGoldBounty()
Get the gold bounty on this unit. (userdata)
            UnHideAbilityToSlot             	= void UnHideAbilityToSlot(string pszAbilityName, string pszReplacedAbilityName)
Makes the first ability unhidden, and puts it where second ability currently is. Will do nothing if the first ability is already unhidden and in a valid slot. (userdata)
            IsDisarmed                      	= bool IsDisarmed()
 (userdata)
            CastAbilityImmediately          	= void CastAbilityImmediately(handle hAbility, int iPlayerIndex)
Cast an ability immediately. (userdata)
            SetMaxMana                      	= void SetMaxMana(float flMaxMana)
Set the maximum mana of this unit. (userdata)
            IsBoss                          	= bool IsBoss()
Is this unit a boss? (userdata)
            IsAlive                         	= bool IsAlive()
Is this unit alive? (userdata)
            IsIdle                          	= bool IsIdle()
Is this creature currently idle? (userdata)
            StartGestureWithPlaybackRate    	= void StartGestureWithPlaybackRate(int nActivity, float flRate)
Add the given gesture activity with a playback rate override. (userdata)
            CastAbilityOnPosition           	= void CastAbilityOnPosition(Vector vPosition, handle hAbility, int iPlayerIndex)
Cast an ability on a position. (userdata)
            SetMinimumGoldBounty            	= void SetMinimumGoldBounty(int iGoldBountyMin)
Set the minimum gold bounty for this unit. (userdata)
            AddItemByName                   	= handle AddItemByName(string pszItemName)
Add an item to this unit's inventory. (userdata)
            HasAbility                      	= bool HasAbility(string pszAbilityName)
See whether this unit has an ability by name. (userdata)
            SetNeverMoveToClearSpace        	= void SetNeverMoveToClearSpace(bool neverMoveToClearSpace)
If set to true, we will never attempt to move this unit to clear space, even when it unphases. (userdata)
            IsSilenced                      	= bool IsSilenced()
 (userdata)
            GetBaseMaxHealth                	= float GetBaseMaxHealth()
Gets the base max health value. (userdata)
            GetAdditionalBattleMusicWeight  	= float GetAdditionalBattleMusicWeight()
Combat involving this creature will have this weight added to the music calcuations. (userdata)
            GetAcquisitionRange             	= float GetAcquisitionRange()
Gets the range at which this unit will auto-acquire. (userdata)
            IsBuilding                      	= bool IsBuilding()
Is this unit a building? (userdata)
            SetBaseMaxHealth                	= void SetBaseMaxHealth(float flBaseMaxHealth)
Set a new base max health value. (userdata)
            IsMoving                        	= bool IsMoving()
Is this unit moving? (userdata)
            PlayVCD                         	= void PlayVCD(string pVCD)
Play a VCD on the NPC. (userdata)
            IsMovementImpaired              	= bool IsMovementImpaired()
 (userdata)
            CastAbilityToggle               	= void CastAbilityToggle(handle hAbility, int iPlayerIndex)
Toggle an ability. (userdata)
            GetHealthPercent                	= int GetHealthPercent()
Get the current health percent of the unit. (userdata)
            GetPhysicalArmorBaseValue       	= float GetPhysicalArmorBaseValue()
Returns base physical armor value. (userdata)
            IsCommandRestricted             	= bool IsCommandRestricted()
 (userdata)
            SpeakConcept                    	= void SpeakConcept(handle hCriteriaTable)
Speak a response system concept with the TLK_DOTA_CUSTOM concept. (userdata)
            TriggerSpellReflect             	= void TriggerSpellReflect(handle hAbility)
Trigger the Lotus Orb-like effect.(hAbility) (userdata)
            SetAcquisitionRange             	= void SetAcquisitionRange(int nRange)
 (userdata)
         }
         IsAttackingEntity               	= function: 0x0018eb50 (function)
         IsPhantomBlocker                	= function: 0x0018a7b0 (function)
         FaceTowards                     	= function: 0x001843e0 (function)
         SetDayTimeVisionRange           	= function: 0x00188828 (function)
         RemoveGesture                   	= function: 0x001878d0 (function)
         GetAverageTrueAttackDamage      	= function: 0x00185b88 (function)
         DestroyAllSpeechBubbles         	= function: 0x0018a9c8 (function)
         FindAllModifiers                	= function: 0x0018a158 (function)
         IsBaseNPC                       	= function: 0x001e29b8 (function)
         AlertNearbyUnits                	= function: 0x0018ee58 (function)
         IsOwnedByAnyPlayer              	= function: 0x00188fa0 (function)
         NotOnMinimap                    	= function: 0x0018d608 (function)
         GetHealthDeficit                	= function: 0x001853e8 (function)
         GetInitialGoalEntity            	= function: 0x00184730 (function)
         GetUnitName                     	= function: 0x0018e730 (function)
         IsConsideredHero                	= function: 0x00185dc8 (function)
         CanSellItems                    	= function: 0x001862c0 (function)
         HasMovementCapability           	= function: 0x0018e278 (function)
         GetLastDamageTime               	= function: 0x00185470 (function)
         RemoveAbility                   	= function: 0x00186518 (function)
         SetForceAttackTargetAlly        	= function: 0x0018f110 (function)
         SetModifierStackCount           	= function: 0x0018a370 (function)
         SetInitialGoalEntity            	= function: 0x001842b0 (function)
         IsOutOfGame                     	= function: 0x0018da18 (function)
         NotOnMinimapForEnemies          	= function: 0x0018d688 (function)
         GetHealthPercent                	= function: 0x00185360 (function)
         GetSpellAmplification           	= function: 0x001867a8 (function)
         AttackReady                     	= function: 0x0018e8b0 (function)
         SetBaseDamageMin                	= function: 0x00189358 (function)
         IsFrozen                        	= function: 0x0018db18 (function)
         DropItemAtPosition              	= function: 0x00184cc8 (function)
         GetModifierCount                	= function: 0x00189e18 (function)
         SetCursorPosition               	= function: 0x00188400 (function)
         GetHullRadius                   	= function: 0x001848e8 (function)
         SetControllableByPlayer         	= function: 0x001890b8 (function)
         SetBaseManaRegen                	= function: 0x001897b8 (function)
         GetCursorPosition               	= function: 0x0018ca78 (function)
         GetBaseAttackTime               	= function: 0x00186f98 (function)
         SetBaseDamageMax                	= function: 0x001893e0 (function)
         IsUnableToMiss                  	= function: 0x0018d478 (function)
         SetCustomHealthLabel            	= function: 0x0018b158 (function)
         SetShouldDoFlyHeightVisual      	= function: 0x0018b0c8 (function)
         HasAttackCapability             	= function: 0x0018e300 (function)
         GetAttacksPerSecond             	= function: 0x001870a8 (function)
         AttackNoEarlierThan             	= function: 0x0018e930 (function)
         Purge                           	= function: 0x0018aec8 (function)
         SetCursorCastTarget             	= function: 0x0018b040 (function)
         IsCreature                      	= function: 0x00186228 (function)
         IsCourier                       	= function: 0x00186130 (function)
         PerformAttack                   	= function: 0x00185c18 (function)
         GetDeathXP                      	= function: 0x00188b58 (function)
         IsIdle                          	= function: 0x00184258 (function)
         SetOrigin                       	= function: 0x001882b8 (function)
         IsMovementImpaired              	= function: 0x0018dd20 (function)
         IsMagicImmune                   	= function: 0x0018d0f8 (function)
         AddNoDraw                       	= function: 0x0018adc8 (function)
         SetCanSellItems                 	= function: 0x00185168 (function)
         ForcePlayActivityOnce           	= function: 0x00187a48 (function)
         SetIdleAcquire                  	= function: 0x00189d18 (function)
         Heal                            	= function: 0x00185808 (function)
         GetCreationTime                 	= function: 0x0018ad70 (function)
         SetUnitCanRespawn               	= function: 0x0018abe0 (function)
         SetDeathXP                      	= function: 0x00188ad8 (function)
         GetPlayerOwner                  	= function: 0x001891c8 (function)
         AngerNearbyUnits                	= function: 0x0018ace8 (function)
         GetCooldownReduction            	= function: 0x001874a8 (function)
         RespawnUnit                     	= function: 0x0018ac68 (function)
         UnitCanRespawn                  	= function: 0x0018ab60 (function)
         GetMoveSpeedModifier            	= function: 0x00187398 (function)
         NotifyWearablesOfModelChange    	= function: 0x0018aad0 (function)
         AddNewModifier                  	= function: 0x00189d98 (function)
         SwapAbilities                   	= function: 0x00187c68 (function)
         GetModelRadius                  	= function: 0x0018aa50 (function)
         IsPhased                        	= function: 0x0018dc18 (function)
         ManageModelChanges              	= function: 0x0018a838 (function)
         MakePhantomBlocker              	= function: 0x0018a728 (function)
         BoundingRadius2D                	= function: 0x0018a6a0 (function)
         IsShrine                        	= function: 0x001884a8 (function)
         MakeVisibleToTeam               	= function: 0x0018a590 (function)
         GetOpposingTeamNumber           	= function: 0x0018a508 (function)
         HasModifier                     	= function: 0x0018a268 (function)
         FindModifierByNameAndCaster     	= function: 0x0018a0c8 (function)
         SellItem                        	= function: 0x00184ee0 (function)
         IsSoftDisarmed                  	= function: 0x001e2998 (function)
         GetMainControllingPlayer        	= function: 0x00189028 (function)
         IsPositionInRange               	= function: 0x00189c08 (function)
         RemoveVerticalMotionController  	= function: 0x00189af8 (function)
         Interrupt                       	= function: 0x0018f1f8 (function)
         GetIdealSpeedNoSlows            	= function: 0x00184b30 (function)
         GetCurrentActiveAbility         	= function: 0x00187f88 (function)
         IsRangedAttacker                	= function: 0x0018e490 (function)
         GetUnitLabel                    	= function: 0x0018e7b0 (function)
         SetBaseMoveSpeed                	= function: 0x00186e00 (function)
         GetBonusManaRegen               	= function: 0x00189840 (function)
         FindAbilityByName               	= function: 0x00187d70 (function)
         GetItemInSlot                   	= function: 0x0018cc28 (function)
         GetRangedProjectileName         	= function: 0x0018e628 (function)
         PickupDroppedItem               	= function: 0x00184dd8 (function)
         FadeGesture                     	= function: 0x00187950 (function)
         GetTotalPurchasedUpgradeGoldCost	= function: 0x00188e78 (function)
         GiveMana                        	= function: 0x00185708 (function)
         GetMinimumGoldBounty            	= function: 0x00188c60 (function)
         GetAttackCapability             	= function: 0x0018dfc0 (function)
         IsTower                         	= function: 0x00185ec8 (function)
         PickupRune                      	= function: 0x00184e60 (function)
         PlayVCD                         	= function: 0x001879d0 (function)
         GetBaseDamageMin                	= function: 0x00189248 (function)
         HasInventory                    	= function: 0x0018cb28 (function)
         MoveToNPCToGiveItem             	= function: 0x00184d50 (function)
         CastAbilityOnTarget             	= function: 0x00188098 (function)
         IsBoss                          	= function: 0x001861b0 (function)
         IsCreep                         	= function: 0x001860b8 (function)
         GetCursorCastTarget             	= function: 0x0018c9f0 (function)
         NoHealthBar                     	= function: 0x0018d798 (function)
         HasFlyMovementCapability        	= function: 0x0018e1e8 (function)
         GetStatusResistance             	= function: 0x001866a0 (function)
         IsBarracks                      	= function: 0x00186038 (function)
         IsSpeciallyDeniable             	= function: 0x0018d4f8 (function)
         GetNeutralSpawnerName           	= function: 0x001885a8 (function)
         IsNightmared                    	= function: 0x0018d278 (function)
         SetForceAttackTarget            	= function: 0x0018f088 (function)
         GetManaPercent                  	= function: 0x00186bf0 (function)
         IsFort                          	= function: 0x00185fc0 (function)
         IsMuted                         	= function: 0x0018cea8 (function)
         SetRevealRadius                 	= function: 0x0018afc0 (function)
         GetAttackTarget                 	= function: 0x0018ecd8 (function)
         IsRealHero                      	= function: 0x00185d48 (function)
         IsInRangeOfShop                 	= function: 0x00186830 (function)
         Kill                            	= function: 0x00185c98 (function)
         HasAnyActiveAbilities           	= function: 0x0018e388 (function)
         Hold                            	= function: 0x00188310 (function)
         GetLevel                        	= function: 0x001845d0 (function)
         GetCloneSource                  	= function: 0x00184838 (function)
         IsHero                          	= function: 0x00185cf0 (function)
         GetModifierNameByIndex          	= function: 0x00189ea0 (function)
         GetCollisionPadding             	= function: 0x001851c8 (function)
         HasAbility                      	= function: 0x00186598 (function)
         TriggerSpellAbsorb              	= function: 0x00187ad0 (function)
         IsAttacking                     	= function: 0x0018ebd8 (function)
         SetAggroTarget                  	= function: 0x0018edd8 (function)
         GetForceAttackTarget            	= function: 0x0018f000 (function)
         GetAttackAnimationPoint         	= function: 0x0018eac8 (function)
         MoveToPosition                  	= function: 0x001854f8 (function)
         MakeIllusion                    	= function: 0x001875b0 (function)
         GetBaseAttackRange              	= function: 0x00185a80 (function)
         GetMaxMana                      	= function: 0x00186b70 (function)
         SetPhysicalArmorBaseValue       	= function: 0x00189578 (function)
         GetIdealSpeed                   	= function: 0x00184ab0 (function)
         GetHealthRegen                  	= function: 0x00186d80 (function)
         GetBaseMoveSpeed                	= function: 0x00186e88 (function)
         PatrolToPosition                	= function: 0x00184c40 (function)
         SwapItems                       	= function: 0x00186498 (function)
         MoveToPositionAggressive        	= function: 0x00185578 (function)
         ProvidesVision                  	= function: 0x0018d1f8 (function)
         IsEvadeDisabled                 	= function: 0x0018d378 (function)
         GetNeverMoveToClearSpace        	= function: 0x001841c8 (function)
         TriggerModifierDodge            	= function: 0x00187b58 (function)
         HasFlyingVision                 	= function: 0x0018e410 (function)
         SetAbilityByIndex               	= function: 0x00187f00 (function)
         GetAggroTarget                  	= function: 0x0018ed58 (function)
         SetBaseAttackTime               	= function: 0x00186f10 (function)
         SetMinimumGoldBounty            	= function: 0x00188bd8 (function)
         GetGoldBounty                   	= function: 0x00188df8 (function)
         UnHideAbilityToSlot             	= function: 0x00187ce8 (function)
         IsDisarmed                      	= function: 0x0018cd28 (function)
         CastAbilityImmediately          	= function: 0x00188230 (function)
         SetMaxMana                      	= function: 0x00186a98 (function)
         SetAttackCapability             	= function: 0x0018e048 (function)
         IsAlive                         	= function: 0x00188630 (function)
         SetHullRadius                   	= function: 0x001852e0 (function)
         StartGestureWithPlaybackRate    	= function: 0x00187840 (function)
         CastAbilityOnPosition           	= function: 0x00188010 (function)
         NoUnitCollision                 	= function: 0x0018d178 (function)
         AddItemByName                   	= function: 0x00186340 (function)
         AddAbility                      	= function: 0x00186418 (function)
         SetNeverMoveToClearSpace        	= function: 0x001840c0 (function)
         IsSilenced                      	= function: 0x0018ce28 (function)
         GetBaseMaxHealth                	= function: 0x00186938 (function)
         GetAdditionalBattleMusicWeight  	= function: 0x0018eee0 (function)
         GetAcquisitionRange             	= function: 0x00185860 (function)
         IsBuilding                      	= function: 0x00185f40 (function)
         SetBaseMaxHealth                	= function: 0x001868b0 (function)
         IsMoving                        	= function: 0x0018af40 (function)
         IsSummoned                      	= function: 0x001847b8 (function)
         GetLastIdleChangeTime           	= function: 0x00184150 (function)
         CastAbilityToggle               	= function: 0x001881a8 (function)
         DisassembleItem                 	= function: 0x00184f60 (function)
         GetPhysicalArmorBaseValue       	= function: 0x00189608 (function)
         GetCursorTargetingNothing       	= function: 0x0018cad0 (function)
         SpeakConcept                    	= function: 0x00184550 (function)
         TriggerSpellReflect             	= function: 0x00187be0 (function)
         SetAcquisitionRange             	= function: 0x001858e8 (function)
         ScriptPlayScene                 	= function: 0x0017b410 (function)
         FDesc                           	= table: 0x0017b3e8 (table)
         {
            GetSceneByIndex                 	= handle GetSceneByIndex(int index)
Returns the instance of the scene entity at the specified index. (userdata)
            GetCurrentScene                 	= handle GetCurrentScene()
Returns the instance of the oldest active scene entity (if any). (userdata)
            ScriptPlayScene                 	= float ScriptPlayScene(string pszScene, float flDelay)
( vcd file, delay ) - play specified vcd file (userdata)
         }
         IsNull                          	= function: 0x0017b388 (function)
         GetCurrentScene                 	= function: 0x0017b508 (function)
         GetSceneByIndex                 	= function: 0x0017b588 (function)
         GetModelScale                   	= function: 0x0017a508 (function)
         SetGraphLookTarget              	= function: 0x0017b168 (function)
         SetGraphParameterEnum           	= function: 0x0017a848 (function)
         SetGraphParameterInt            	= function: 0x0017a7c0 (function)
         IsSequenceFinished              	= function: 0x0017a418 (function)
         ResetSequence                   	= function: 0x0017a998 (function)
         SetSequence                     	= function: 0x0017a918 (function)
         FDesc                           	= table: 0x001797b0 (table)
         {
            GetModelScale                   	= float GetModelScale()
Get scale of entity's model. (userdata)
            SetGraphLookTarget              	= void SetGraphLookTarget(Vector vValue)
Pass the desired look target in world space to the graph (userdata)
            SetGraphParameterEnum           	= void SetGraphParameterEnum(string szName, int nValue)
Pass the enum (int) value to the specified param (userdata)
            SetGraphParameterInt            	= void SetGraphParameterInt(string szName, int nValue)
Pass the int value to the specified param (userdata)
            IsSequenceFinished              	= bool IsSequenceFinished()
Ask whether the main sequence is done playing. (userdata)
            ResetSequence                   	= void ResetSequence(string pSequenceName)
Sets the active sequence by name, resetting the current cycle. (userdata)
            SetSequence                     	= void SetSequence(string pSequenceName)
Sets the active sequence by name, keeping the current cycle. (userdata)
            SetGraphParameter               	= void SetGraphParameter(string pszParam, table svArg)
Set the specific param value, type is inferred from the type in script (userdata)
            SetGraphParameterVector         	= void SetGraphParameterVector(string szName, Vector vValue)
Pass the vector value to the specified param in the graph (userdata)
            GetSequence                     	= string GetSequence()
Returns the name of the active sequence. (userdata)
            StopAnimation                   	= void StopAnimation()
Stop the current animation by setting playback rate to 0.0. (userdata)
            GetAttachmentForward            	= Vector GetAttachmentForward(int iAttachment)
Get the attachment id's forward vector. (userdata)
            SetGraphParameterFloat          	= void SetGraphParameterFloat(string szName, float flValue)
Pass the float value to the specified param (userdata)
            SequenceDuration                	= float SequenceDuration(string pSequenceName)
Returns the duration in seconds of the given sequence name. (userdata)
            ActiveSequenceDuration          	= float ActiveSequenceDuration()
Returns the duration in seconds of the active sequence. (userdata)
            SetGraphParameterBool           	= void SetGraphParameterBool(string szName, bool bValue)
Set the specific param on or off (userdata)
            GetGraphParameter               	= table GetGraphParameter(string pszParam)
Get the value of the given animGraph parameter (userdata)
            SetModelScale                   	= void SetModelScale(float flScale)
Set scale of entity's model. (userdata)
            GetAttachmentAngles             	= Vector GetAttachmentAngles(int iAttachment)
Get the attachment id's angles as a p,y,r vector. (userdata)
            ScriptLookupAttachment          	= int ScriptLookupAttachment(string pAttachmentName)
Get the named attachment id. (userdata)
            SetPoseParameter                	= float SetPoseParameter(string szName, float fValue)
Set the specified pose parameter to the specified value. (userdata)
            GetAttachmentOrigin             	= Vector GetAttachmentOrigin(int iAttachment)
Get the attachment id's origin vector. (userdata)
            GetCycle                        	= float GetCycle()
Get the cycle of the animation. (userdata)
         }
         ActiveSequenceDuration          	= function: 0x0017aa18 (function)
         SetGraphParameterVector         	= function: 0x0017b0e0 (function)
         GetSequence                     	= function: 0x0017a4a0 (function)
         SetPoseParameter                	= function: 0x001797d8 (function)
         StopAnimation                   	= function: 0x0017a300 (function)
         SetGraphParameterFloat          	= function: 0x0017a698 (function)
         SequenceDuration                	= function: 0x0017aaa0 (function)
         GetAttachmentAngles             	= function: 0x0017a0d8 (function)
         SetGraphParameter               	= function: 0x0017a588 (function)
         SetGraphParameterBool           	= function: 0x0017a610 (function)
         GetGraphParameter               	= function: 0x0017b1f0 (function)
         GetAttachmentForward            	= function: 0x0017a390 (function)
         IsNull                          	= function: 0x00179750 (function)
         SetModelScale                   	= function: 0x0017a260 (function)
         ScriptLookupAttachment          	= function: 0x0017a150 (function)
         GetAttachmentOrigin             	= function: 0x0017a1d8 (function)
         GetCycle                        	= function: 0x0017a6e8 (function)
         SetMaterialGroupHash            	= function: 0x00179378 (function)
         SetSingleMeshGroup              	= function: 0x00179880 (function)
         SetRenderMode                   	= function: 0x00179268 (function)
         SetSize                         	= function: 0x00178ff8 (function)
         FDesc                           	= table: 0x00178fd0 (table)
         {
            SetMaterialGroupHash            	= void SetMaterialGroupHash(unsigned nHash)
SetMaterialGroupHash( uint32 ): Set the material group hash of this entity. (userdata)
            SetSingleMeshGroup              	= void SetSingleMeshGroup(string pMeshGroupName)
SetSingleMeshGroup( string ): Set a single mesh group for this entity. (userdata)
            SetRenderMode                   	= void SetRenderMode(int nMode)
SetRenderMode( int ): Sets the render mode of the entity. (userdata)
            SetSize                         	= void SetSize(Vector mins, Vector maxs)
 (userdata)
            SetMaterialGroupMask            	= void SetMaterialGroupMask(uint64 nMeshGroupMask)
SetMaterialGroupMask( uint64 ): Set the mesh group mask of this entity. (userdata)
            SetSkin                         	= void SetSkin(int iSkin)
Set skin (int). (userdata)
            GetMaterialGroupMask            	= uint64 GetMaterialGroupMask()
GetMaterialGroupMask(): Get the mesh group mask of this entity. (userdata)
            SetModel                        	= void SetModel(string pModelName)
 (userdata)
            SetBodygroupByName              	= void SetBodygroupByName(string pName, int iValue)
Sets a bodygroup by name. (userdata)
            GetRenderColor                  	= Vector GetRenderColor()
GetRenderColor(): Get the render color of the entity. (userdata)
            SetLightGroup                   	= void SetLightGroup(string pLightGroup)
SetLightGroup( string ): Sets the light group of the entity. (userdata)
            SetMaterialGroup                	= void SetMaterialGroup(string pMaterialGroup)
SetMaterialGroup( string ): Set the material group of this entity. (userdata)
            SetRenderColor                  	= void SetRenderColor(int r, int g, int b)
SetRenderColor( r, g, b ): Sets the render color of the entity. (userdata)
            GetMaterialGroupHash            	= unsigned GetMaterialGroupHash()
GetMaterialGroupHash(): Get the material group hash of this entity. (userdata)
            GetRenderAlpha                  	= int GetRenderAlpha()
GetRenderAlpha(): Get the alpha modulation of this entity. (userdata)
            SetRenderAlpha                  	= void SetRenderAlpha(int nAlpha)
SetRenderAlpha( int ): Set the alpha modulation of this entity. (userdata)
            SetBodygroup                    	= void SetBodygroup(int iGroup, int iValue)
Sets a bodygroup. (userdata)
         }
         IsNull                          	= function: 0x00178f70 (function)
         SetMaterialGroupMask            	= function: 0x00179908 (function)
         SetSkin                         	= function: 0x00179570 (function)
         GetMaterialGroupMask            	= function: 0x00179990 (function)
         SetModel                        	= function: 0x001790c8 (function)
         SetRenderAlpha                  	= function: 0x00179050 (function)
         SetBodygroupByName              	= function: 0x001794e8 (function)
         SetBodygroup                    	= function: 0x00179a18 (function)
         SetLightGroup                   	= function: 0x001792f8 (function)
         SetRenderColor                  	= function: 0x00179468 (function)
         GetMaterialGroupHash            	= function: 0x00179400 (function)
         GetRenderAlpha                  	= function: 0x00179148 (function)
         SetMaterialGroup                	= function: 0x00179648 (function)
         GetRenderColor                  	= function: 0x001791c8 (function)
         GetTeamNumber                   	= function: 0x0013c170 (function)
         GetChildren                     	= function: 0x00139e90 (function)
         IsNPC                           	= function: 0x0013b200 (function)
         SetAngularVelocity              	= function: 0x0013b000 (function)
         FDesc                           	= table: 0x00139a40 (table)
         {
            GetTeamNumber                   	= int GetTeamNumber()
Get the team number of this entity. (userdata)
            GetChildren                     	= handle GetChildren()
Get the entities parented to this entity. (userdata)
            IsNPC                           	= bool IsNPC()
Is this entity an CAI_BaseNPC? (userdata)
            SetAngularVelocity              	= void SetAngularVelocity(float pitchVel, float yawVel, float rollVel)
Set the local angular velocity - takes float pitch,yaw,roll velocities (userdata)
            SetMaxHealth                    	= void SetMaxHealth(int amt)
Set the maximum health of this entity. (userdata)
            Kill                            	= void Kill()
 (userdata)
            SetLocalScale                   	= void SetLocalScale(float flScale)
 (userdata)
            DeleteAttribute                 	= void DeleteAttribute(string pName)
Delete an entity attribute. (userdata)
            GetLocalScale                   	= float GetLocalScale()
 (userdata)
            GetAngularVelocity              	= Vector GetAngularVelocity()
Get the local angular velocity - returns a vector of pitch,yaw,roll (userdata)
            SetLocalOrigin                  	= void SetLocalOrigin(Vector origin)
Set entity local origin from a Vector (userdata)
            TransformPointWorldToEntity     	= Vector TransformPointWorldToEntity(Vector vPoint)
Returns the input Vector transformed from world to entity space (userdata)
            SetContextThink                 	= void SetContextThink(string pszContextName, handle hThinkFunc, float flInterval)
Set a think function on this entity. (userdata)
            Attribute_SetIntValue           	= void Attribute_SetIntValue(string pName, int nValue)
Set int value for an entity attribute. (userdata)
            HasAttribute                    	= bool HasAttribute(string pName)
See if an entity has a particular attribute. (userdata)
            Attribute_GetIntValue           	= int Attribute_GetIntValue(string pName, int nDefault)
Get int value for an entity attribute. (userdata)
            GetBoundingMaxs                 	= Vector GetBoundingMaxs()
Get a vector containing max bounds, centered on object. (userdata)
            GetCenter                       	= Vector GetCenter()
Get vector to center of object - absolute coords (userdata)
            GetOwner                        	= handle GetOwner()
Gets this entity's owner (userdata)
            SetConstraint                   	= void SetConstraint(Vector vPos)
Set the position of the constraint. (userdata)
            GetContext                      	= table GetContext(string name)
GetContext( name ): looks up a context and returns it if available. May return string, float, or null (if the context isn't found). (userdata)
            SetMass                         	= void SetMass(float flMass)
Set the mass of an entity. (does nothing if it doesn't have a physics object) (userdata)
            SetAbsScale                     	= void SetAbsScale(float flScale)
 (userdata)
            OverrideFriction                	= void OverrideFriction(float duration, float friction)
Takes duration, value for a temporary override. (userdata)
            SetEntityName                   	= void SetEntityName(string pName)
Set the name of an entity. (userdata)
            GetUpVector                     	= Vector GetUpVector()
Get the up vector of the entity. (userdata)
            GetVelocity                     	= Vector GetVelocity()
 (userdata)
            RemoveEffects                   	= void RemoveEffects(int nFlags)
RemoveEffects( int ): Removes the render effect flag. (userdata)
            SetLocalAngles                  	= void SetLocalAngles(float fPitch, float fYaw, float fRoll)
Set entity local pitch, yaw, roll by component (userdata)
            Attribute_SetFloatValue         	= void Attribute_SetFloatValue(string pName, float flValue)
Set float value for an entity attribute. (userdata)
            GetBaseVelocity                 	= Vector GetBaseVelocity()
Get Base? velocity. (userdata)
            GatherCriteria                  	= void GatherCriteria(handle hResult)
Returns a table containing the criteria that would be used for response queries on this entity. This is the same as the table that is passed to response rule script function callbacks. (userdata)
            Trigger                         	= void Trigger()
Fires off this entity's OnTrigger responses. (userdata)
            SetAbsOrigin                    	= void SetAbsOrigin(Vector origin)
 (userdata)
            SetHealth                       	= void SetHealth(int nHealth)
Set the health of this entity. (userdata)
            GetOrigin                       	= Vector GetOrigin()
 (userdata)
            Attribute_GetFloatValue         	= float Attribute_GetFloatValue(string pName, float flDefault)
Get float value for an entity attribute. (userdata)
            EmitSoundParams                 	= void EmitSoundParams(string soundname, int nPitch, float flVolume, float flDelay)
Plays/modifies a sound from this entity. changes sound if nPitch and/or flVol or flSoundTime is > 0. (userdata)
            TakeDamage                      	= int TakeDamage(handle hInfo)
Apply damage to this entity. Use CreateDamageInfo() to create a damageinfo object. (userdata)
            TransformPointEntityToWorld     	= Vector TransformPointEntityToWorld(Vector vPoint)
Returns the input Vector transformed from entity to world space (userdata)
            GetTeam                         	= int GetTeam()
Get the team number of this entity. (userdata)
            SetForwardVector                	= void SetForwardVector(Vector v)
Set the orientation of the entity to have this forward vector. (userdata)
            SetContextNum                   	= void SetContextNum(string pName, float fValue, float duration)
SetContextNum( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a number (int or float). Will last for duration (set 0 to mean 'forever'). (userdata)
            GetAbsOrigin                    	= Vector GetAbsOrigin()
 (userdata)
            GetRootMoveParent               	= handle GetRootMoveParent()
If in hierarchy, walks up the hierarchy to find the root parent. (userdata)
            NextMovePeer                    	= handle NextMovePeer()
 (userdata)
            ApplyLocalAngularVelocityImpulse	= void ApplyLocalAngularVelocityImpulse(Vector angImpulse)
Apply an Ang Velocity Impulse (userdata)
            GetMaxHealth                    	= int GetMaxHealth()
Get the maximum health of this entity. (userdata)
            PrecacheScriptSound             	= void PrecacheScriptSound(string soundname)
Precache a sound for later playing. (userdata)
            EmitSound                       	= void EmitSound(string soundname)
Plays a sound from this entity. (userdata)
            GetLocalAngularVelocity         	= QAngle GetLocalAngularVelocity()
Maybe local angvel (userdata)
            ApplyAbsVelocityImpulse         	= void ApplyAbsVelocityImpulse(Vector vecImpulse)
Apply a Velocity Impulse (userdata)
            GetHealth                       	= int GetHealth()
Get the health of this entity. (userdata)
            EyeAngles                       	= QAngle EyeAngles()
Get the qangles that this entity is looking at. (userdata)
            GetLocalVelocity                	= Vector GetLocalVelocity()
Get Entity relative velocity. (userdata)
            GetModelName                    	= string GetModelName()
Returns the name of the model. (userdata)
            SetContext                      	= void SetContext(string pName, string pValue, float duration)
SetContext( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a string. Will last for duration (set 0 to mean 'forever'). (userdata)
            GetRightVector                  	= Vector GetRightVector()
Get the right vector of the entity. (userdata)
            GetAnglesAsVector               	= Vector GetAnglesAsVector()
Get entity pitch, yaw, roll as a vector. (userdata)
            SetVelocity                     	= void SetVelocity(Vector vecVelocity)
 (userdata)
            FirstMoveChild                  	= handle FirstMoveChild()
 (userdata)
            GetAngles                       	= QAngle GetAngles()
 (userdata)
            SetAngles                       	= void SetAngles(float fPitch, float fYaw, float fRoll)
Set entity pitch, yaw, roll by component. (userdata)
            IsAlive                         	= bool IsAlive()
Is this entity alive? (userdata)
            SetParent                       	= void SetParent(handle hParent, string pAttachmentname)
Set the parent for this entity. (userdata)
            IsPlayer                        	= bool IsPlayer()
Is this entity a player? (userdata)
            AddEffects                      	= void AddEffects(int nFlags)
AddEffects( int ): Adds the render effect flag. (userdata)
            GetAbsScale                     	= float GetAbsScale()
 (userdata)
            GetBoundingMins                 	= Vector GetBoundingMins()
Get a vector containing min bounds, centered on object. (userdata)
            EyePosition                     	= Vector EyePosition()
Get vector to eye position - absolute coords. (userdata)
            SetGravity                      	= void SetGravity(float flGravity)
Set PLAYER gravity, ignored for objects. (userdata)
            SetAbsAngles                    	= void SetAbsAngles(float fPitch, float fYaw, float fRoll)
Set entity pitch, yaw, roll by component. (userdata)
            GetForwardVector                	= Vector GetForwardVector()
Get the forward vector of the entity. (userdata)
            SetFriction                     	= void SetFriction(float flFriction)
Set PLAYER friction, ignored for objects. (userdata)
            GetLocalOrigin                  	= Vector GetLocalOrigin()
Get entity local origin as a Vector (userdata)
            SetOrigin                       	= void SetOrigin(Vector v)
 (userdata)
            GetOwnerEntity                  	= handle GetOwnerEntity()
Get the owner entity, if there is one (userdata)
            GetMoveParent                   	= handle GetMoveParent()
If in hierarchy, retrieves the entity's parent. (userdata)
            StopSound                       	= void StopSound(string soundname)
Stops a named sound playing from this entity. (userdata)
            GetMass                         	= float GetMass()
Get the mass of an entity. (returns 0 if it doesn't have a physics object) (userdata)
            SetOwner                        	= void SetOwner(handle pOwner)
Sets this entity's owner (userdata)
            ValidatePrivateScriptScope      	= void ValidatePrivateScriptScope()
Validates the private script scope and creates it if one doesn't exist. (userdata)
            GetSoundDuration                	= float GetSoundDuration(string soundname, string actormodel)
Returns float duration of the sound. Takes soundname and optional actormodelname. (userdata)
            SetTeam                         	= void SetTeam(int iTeamNum)
 (userdata)
            GetBounds                       	= table GetBounds()
Get a table containing the 'Mins' & 'Maxs' vector bounds, centered on object. (userdata)
            GetLocalAngles                  	= QAngle GetLocalAngles()
Get entity local pitch, yaw, roll as a QAngle (userdata)
            FollowEntity                    	= void FollowEntity(handle hEnt, bool bBoneMerge)
hEntity to follow, bool bBoneMerge (userdata)
         }
         IsNull                          	= function: 0x001399e0 (function)
         SetOwner                        	= function: 0x0013aa70 (function)
         SetLocalScale                   	= function: 0x0013bff0 (function)
         DeleteAttribute                 	= function: 0x0013a8e0 (function)
         GetLocalScale                   	= function: 0x0013bf70 (function)
         GetAngularVelocity              	= function: 0x0013af78 (function)
         SetLocalOrigin                  	= function: 0x0013ab50 (function)
         TransformPointWorldToEntity     	= function: 0x0013ace0 (function)
         SetContextThink                 	= function: 0x0013c3d8 (function)
         Attribute_SetIntValue           	= function: 0x0013a750 (function)
         HasAttribute                    	= function: 0x0013a860 (function)
         Attribute_GetIntValue           	= function: 0x0013a7d8 (function)
         GetBoundingMaxs                 	= function: 0x0013ae78 (function)
         GetCenter                       	= function: 0x0013c0f0 (function)
         GetOwner                        	= function: 0x0013a9f0 (function)
         SetConstraint                   	= function: 0x0013a3c0 (function)
         GetContext                      	= function: 0x0013c558 (function)
         SetMass                         	= function: 0x0013bd18 (function)
         SetAbsScale                     	= function: 0x0013bef0 (function)
         OverrideFriction                	= function: 0x0013b928 (function)
         SetEntityName                   	= function: 0x0013aaf0 (function)
         GetUpVector                     	= function: 0x00139ae0 (function)
         GetVelocity                     	= function: 0x0013b680 (function)
         RemoveEffects                   	= function: 0x0013a5c0 (function)
         SetLocalAngles                  	= function: 0x0013a210 (function)
         Attribute_SetFloatValue         	= function: 0x0013a640 (function)
         GetBaseVelocity                 	= function: 0x0013b8a8 (function)
         IsBaseNPC                       	= function: 0x001e2958 (function)
         GetLocalAngles                  	= function: 0x0013a290 (function)
         GatherCriteria                  	= function: 0x0013c5d8 (function)
         Trigger                         	= function: 0x0013c360 (function)
         SetAbsAngles                    	= function: 0x00139f88 (function)
         GetBounds                       	= function: 0x0013aef8 (function)
         SetHealth                       	= function: 0x0013b378 (function)
         GetMoveParent                   	= function: 0x00139d00 (function)
         GetOrigin                       	= function: 0x0013bc40 (function)
         EmitSound                       	= function: 0x0013b9b0 (function)
         Attribute_GetFloatValue         	= function: 0x0013a6c8 (function)
         SetAbsOrigin                    	= function: 0x0013c070 (function)
         TakeDamage                      	= function: 0x0013b088 (function)
         TransformPointEntityToWorld     	= function: 0x0013ac50 (function)
         GetRootMoveParent               	= function: 0x00139f00 (function)
         SetForwardVector                	= function: 0x0013ad70 (function)
         SetContextNum                   	= function: 0x0013c4d8 (function)
         GetAbsOrigin                    	= function: 0x0013bd70 (function)
         EmitSoundParams                 	= function: 0x0013ba30 (function)
         NextMovePeer                    	= function: 0x0013a0e8 (function)
         ApplyLocalAngularVelocityImpulse	= function: 0x0013b788 (function)
         GetMaxHealth                    	= function: 0x0013b278 (function)
         PrecacheScriptSound             	= function: 0x0013bbb8 (function)
         GetLocalAngularVelocity         	= function: 0x0013b820 (function)
         ApplyAbsVelocityImpulse         	= function: 0x0013b700 (function)
         GetLocalVelocity                	= function: 0x0013b5f8 (function)
         GetHealth                       	= function: 0x0013b3f8 (function)
         EyeAngles                       	= function: 0x0013a090 (function)
         SetVelocity                     	= function: 0x0013b578 (function)
         GetModelName                    	= function: 0x00139d90 (function)
         SetContext                      	= function: 0x0013c458 (function)
         GetRightVector                  	= function: 0x00139be0 (function)
         GetAnglesAsVector               	= function: 0x0013a008 (function)
         SetThink                        	= function: 0x001ca2e8 (function)
         GetForwardVector                	= function: 0x00139b58 (function)
         GetAngles                       	= function: 0x0013bdf0 (function)
         SetMaxHealth                    	= function: 0x0013b2f8 (function)
         IsAlive                         	= function: 0x0013b108 (function)
         SetParent                       	= function: 0x0013a340 (function)
         IsPlayer                        	= function: 0x0013b180 (function)
         AddEffects                      	= function: 0x0013a540 (function)
         IsInstance                      	= function: 0x001ca328 (function)
         GetBoundingMins                 	= function: 0x0013adf8 (function)
         EyePosition                     	= function: 0x0013a440 (function)
         SetGravity                      	= function: 0x0013b478 (function)
         StopThink                       	= function: 0x001ca308 (function)
         FirstMoveChild                  	= function: 0x00139c60 (function)
         SetFriction                     	= function: 0x0013b4f8 (function)
         GetLocalOrigin                  	= function: 0x0013abd0 (function)
         SetOrigin                       	= function: 0x0013a190 (function)
         GetOwnerEntity                  	= function: 0x00139e10 (function)
         SetAngles                       	= function: 0x0013a4c0 (function)
         StopSound                       	= function: 0x0013bab0 (function)
         GetMass                         	= function: 0x0013bcc0 (function)
         GetAbsScale                     	= function: 0x0013be70 (function)
         ValidatePrivateScriptScope      	= function: 0x0013a960 (function)
         GetSoundDuration                	= function: 0x0013bb30 (function)
         Kill                            	= function: 0x00139a68 (function)
         GetTeam                         	= function: 0x0013c1f0 (function)
         SetTeam                         	= function: 0x0013c268 (function)
         FollowEntity                    	= function: 0x0013c2e0 (function)
         GetEntityIndex                  	= function: 0x00113c88 (function)
         DisconnectRedirectedOutput      	= function: 0x00138df0 (function)
         GetOrCreatePublicScriptScope    	= function: 0x001390a8 (function)
         FDesc                           	= table: 0x00138b68 (table)
         {
            GetEntityIndex                  	= int GetEntityIndex()
 (userdata)
            DisconnectRedirectedOutput      	= void DisconnectRedirectedOutput(string, string, handle)
Removes a connected script function from an I/O event on the passed entity. (userdata)
            GetOrCreatePublicScriptScope    	= handle GetOrCreatePublicScriptScope()
Retrieve, creating if necessary, the public script-side data associated with an entity (userdata)
            GetOrCreatePrivateScriptScope   	= handle GetOrCreatePrivateScriptScope()
Retrieve, creating if necessary, the private per-instance script-side data associated with an entity (userdata)
            GetPrivateScriptScope           	= handle GetPrivateScriptScope()
Retrieve the private per-instance script-side data associated with an entity (userdata)
            RedirectOutput                  	= void RedirectOutput(string, string, handle)
Adds an I/O connection that will call the named function on the passed entity when the specified output fires. (userdata)
            GetIntAttr                      	= int GetIntAttr(string)
Get Integer Attribute (userdata)
            FireOutput                      	= void FireOutput(string, handle, handle, table, float)
Fire an entity output (userdata)
            GetDebugName                    	= string GetDebugName()
Get the entity name w/help if not defined (i.e. classname/etc) (userdata)
            DisconnectOutput                	= void DisconnectOutput(string, string)
Removes a connected script function from an I/O event on this entity. (userdata)
            Destroy                         	= void Destroy()
 (userdata)
            GetClassname                    	= string GetClassname()
 (userdata)
            GetName                         	= string GetName()
 (userdata)
            ConnectOutput                   	= void ConnectOutput(string, string)
Adds an I/O connection that will call the named function on this entity when the specified output fires. (userdata)
            entindex                        	= int entindex()
 (userdata)
            GetEntityHandle                 	= ehandle GetEntityHandle()
Get the entity as an EHANDLE (userdata)
            RemoveSelf                      	= void RemoveSelf()
Delete this entity (userdata)
            SetIntAttr                      	= void SetIntAttr(string, int)
Set Integer Attribute (userdata)
            GetPublicScriptScope            	= handle GetPublicScriptScope()
Retrieve the public script-side data associated with an entity (userdata)
         }
         IsNull                          	= function: 0x00138ae8 (function)
         GetOrCreatePrivateScriptScope   	= function: 0x001391c0 (function)
         GetPrivateScriptScope           	= function: 0x00139138 (function)
         entindex                        	= function: 0x00113cb8 (function)
         GetIntAttr                      	= function: 0x00138d40 (function)
         FireOutput                      	= function: 0x00138bc8 (function)
         Destroy                         	= function: 0x00139358 (function)
         GetDebugName                    	= function: 0x00113d48 (function)
         SetIntAttr                      	= function: 0x00138c88 (function)
         GetClassname                    	= function: 0x00138f38 (function)
         GetName                         	= function: 0x00138f08 (function)
         ConnectOutput                   	= function: 0x00113ac8 (function)
         RedirectOutput                  	= function: 0x00138dc0 (function)
         GetEntityHandle                 	= function: 0x00138f90 (function)
         DisconnectOutput                	= function: 0x00113668 (function)
         RemoveSelf                      	= function: 0x00138cc0 (function)
         GetPublicScriptScope            	= function: 0x00139020 (function)
      }
      __self                          	= userdata: 0x001fb880 (userdata)
   }
   caster                          	= table: 0x001fb840 (table, already seen)
   caster_entindex                 	= 363 (number)
   ScriptFile                      	= "skill/hero_jijiang.lua" (string)
   Function                        	= "jijiang" (string)
   ability                         	= table: 0x001b9d08 (table)
   {
      metatable = table: 0x001b2e08
      {
         FDesc                           	= table: 0x001b2e90 (table)
         {
            ApplyDataDrivenModifier         	= handle ApplyDataDrivenModifier(handle hCaster, handle hTarget, string pszModifierName, handle hModifierTable)
Applies a data driven modifier to the target (userdata)
            ApplyDataDrivenThinker          	= handle ApplyDataDrivenThinker(handle hCaster, Vector vLocation, string pszModifierName, handle hModifierTable)
Applies a data driven thinker at the location (userdata)
         }
         IsNull                          	= function: 0x001b2e30 (function)
         ApplyDataDrivenModifier         	= function: 0x001b2eb8 (function)
         ApplyDataDrivenThinker          	= function: 0x001b2f88 (function)
         IsHiddenAsSecondaryAbility      	= function: 0x00180eb8 (function)
         IsCosmetic_Engine               	= function: 0x0017ce98 (function)
         GetCastRange_Engine             	= function: 0x0017c988 (function)
         GetIntrinsicModifierName        	= function: 0x001804c0 (function)
         GetAnimationIgnoresModelScale   	= function: 0x0017cb88 (function)
         GetAbilityIndex                 	= function: 0x0017c608 (function)
         OnHeroLevelUp                   	= function: 0x001805d8 (function)
         SpeakAbilityConcept             	= function: 0x00180870 (function)
         GetAbilityDamageType            	= function: 0x0017da30 (function)
         FDesc                           	= table: 0x0012c450 (table)
         {
            IsHiddenAsSecondaryAbility      	= bool IsHiddenAsSecondaryAbility()
 (userdata)
            GetAnimationIgnoresModelScale   	= bool GetAnimationIgnoresModelScale()
 (userdata)
            GetAbilityIndex                 	= int GetAbilityIndex()
 (userdata)
            OnHeroLevelUp                   	= void OnHeroLevelUp()
 (userdata)
            OnHeroCalculateStatBonus        	= void OnHeroCalculateStatBonus()
 (userdata)
            OnChannelFinish                 	= void OnChannelFinish(bool bInterrupted)
 (userdata)
            ToggleAutoCast                  	= void ToggleAutoCast()
 (userdata)
            GetDuration                     	= float GetDuration()
 (userdata)
            SetInAbilityPhase               	= void SetInAbilityPhase(bool bInAbilityPhase)
 (userdata)
            IsChanneling                    	= bool IsChanneling()
Returns whether the ability is currently channeling. (userdata)
            GetAbilityTargetType            	= int GetAbilityTargetType()
 (userdata)
            GetAbilityName                  	= string GetAbilityName()
Returns the name of this ability. (userdata)
            GetBehavior                     	= int GetBehavior()
 (userdata)
            SetStealable                    	= void SetStealable(bool bStealable)
 (userdata)
            PlaysDefaultAnimWhenStolen      	= bool PlaysDefaultAnimWhenStolen()
 (userdata)
            SetUpgradeRecommended           	= void SetUpgradeRecommended(bool bUpgradeRecommended)
 (userdata)
            IsActivated                     	= bool IsActivated()
 (userdata)
            RefreshCharges                  	= void RefreshCharges()
 (userdata)
            OnAbilityPhaseInterrupted       	= void OnAbilityPhaseInterrupted()
 (userdata)
            IsFullyCastable                 	= bool IsFullyCastable()
Returns whether the ability can be cast. (userdata)
            GetStolenActivityModifier       	= string GetStolenActivityModifier()
 (userdata)
            IsPassive                       	= bool IsPassive()
 (userdata)
            GetCastRange                    	= int GetCastRange(Vector vLocation, handle hTarget)
Gets the cast range of the ability. (userdata)
            GetBackswingTime                	= float GetBackswingTime()
 (userdata)
            SetActivated                    	= void SetActivated(bool bActivated)
 (userdata)
            GetAbilityType                  	= int GetAbilityType()
 (userdata)
            GetCooldownTime                 	= float GetCooldownTime()
 (userdata)
            PayManaCost                     	= void PayManaCost()
 (userdata)
            IsHiddenWhenStolen              	= bool IsHiddenWhenStolen()
 (userdata)
            OnOwnerDied                     	= void OnOwnerDied()
 (userdata)
            SpeakTrigger                    	= <unknown> SpeakTrigger()
 (userdata)
            GetAssociatedSecondaryAbilities 	= string GetAssociatedSecondaryAbilities()
 (userdata)
            GetModifierValue                	= float GetModifierValue()
 (userdata)
            GetCursorTargetingNothing       	= bool GetCursorTargetingNothing()
 (userdata)
            GetCooldownTimeRemaining        	= float GetCooldownTimeRemaining()
 (userdata)
            GetChannelStartTime             	= float GetChannelStartTime()
 (userdata)
            OnOwnerSpawned                  	= void OnOwnerSpawned()
 (userdata)
            GetToggleState                  	= bool GetToggleState()
 (userdata)
            OnAbilityPinged                 	= void OnAbilityPinged(int nPlayerID, bool bCtrlHeld)
 (userdata)
            EndCooldown                     	= void EndCooldown()
Clear the cooldown remaining on this ability. (userdata)
            GetCooldown                     	= float GetCooldown(int iLevel)
Get the cooldown duration for this ability at a given level, not the amount of cooldown actually left. (userdata)
            ToggleAbility                   	= void ToggleAbility()
 (userdata)
            SetChanneling                   	= void SetChanneling(bool bChanneling)
 (userdata)
            OnSpellStart                    	= void OnSpellStart()
 (userdata)
            CastAbility                     	= bool CastAbility()
 (userdata)
            GetChannelledManaCostPerSecond  	= int GetChannelledManaCostPerSecond(int iLevel)
 (userdata)
            IsInAbilityPhase                	= bool IsInAbilityPhase()
Returns whether the ability is currently casting. (userdata)
            IsOwnersGoldEnough              	= bool IsOwnersGoldEnough(int nIssuerPlayerID)
 (userdata)
            IsHidden                        	= bool IsHidden()
 (userdata)
            GetLevelSpecialValueFor         	= table GetLevelSpecialValueFor(string szName, int nLevel)
 (userdata)
            PayGoldCostForUpgrade           	= void PayGoldCostForUpgrade()
 (userdata)
            SpeakAbilityConcept             	= void SpeakAbilityConcept(int iConcept)
 (userdata)
            MarkAbilityButtonDirty          	= void MarkAbilityButtonDirty()
Mark the ability button for this ability as needing a refresh. (userdata)
            SetAbilityIndex                 	= void SetAbilityIndex(int iIndex)
 (userdata)
            OnChannelThink                  	= void OnChannelThink(float flInterval)
 (userdata)
            HeroXPChange                    	= bool HeroXPChange(float flXP)
 (userdata)
            IsCooldownReady                 	= bool IsCooldownReady()
 (userdata)
            IsToggle                        	= bool IsToggle()
 (userdata)
            GetCastPoint                    	= float GetCastPoint()
 (userdata)
            OnUpgrade                       	= void OnUpgrade()
 (userdata)
            GetAutoCastState                	= bool GetAutoCastState()
 (userdata)
            GetSpecialValueFor              	= table GetSpecialValueFor(string szName)
Gets a value from this ability's special value block for its current level. (userdata)
            DecrementModifierRefCount       	= void DecrementModifierRefCount()
 (userdata)
            IsItem                          	= bool IsItem()
 (userdata)
            UseResources                    	= void UseResources(bool bMana, bool bGold, bool bCooldown)
 (userdata)
            IsAttributeBonus                	= bool IsAttributeBonus()
 (userdata)
            IncrementModifierRefCount       	= void IncrementModifierRefCount()
 (userdata)
            ResetToggleOnRespawn            	= bool ResetToggleOnRespawn()
 (userdata)
            GetIntrinsicModifierName        	= string GetIntrinsicModifierName()
 (userdata)
            GetAbilityTargetFlags           	= int GetAbilityTargetFlags()
 (userdata)
            GetGoldCostForUpgrade           	= int GetGoldCostForUpgrade(int iLevel)
 (userdata)
            SetOverrideCastPoint            	= void SetOverrideCastPoint(float flCastPoint)
 (userdata)
            GetGoldCost                     	= int GetGoldCost(int iLevel)
 (userdata)
            GetChannelTime                  	= float GetChannelTime()
 (userdata)
            CreateVisibilityNode            	= void CreateVisibilityNode(Vector vLocation, float fRadius, float fDuration)
 (userdata)
            GetManaCost                     	= int GetManaCost(int iLevel)
 (userdata)
            GetPlaybackRateOverride         	= float GetPlaybackRateOverride()
 (userdata)
            IsStealable                     	= bool IsStealable()
 (userdata)
            EndChannel                      	= void EndChannel(bool bInterrupted)
 (userdata)
            GetLevel                        	= int GetLevel()
Get the current level of the ability. (userdata)
            SetRefCountsModifiers           	= void SetRefCountsModifiers(bool bRefCounts)
 (userdata)
            OnAbilityPhaseStart             	= bool OnAbilityPhaseStart()
 (userdata)
            UpgradeAbility                  	= void UpgradeAbility(bool bSupressSpeech)
 (userdata)
            SetFrozenCooldown               	= void SetFrozenCooldown(bool bFrozenCooldown)
 (userdata)
            ShouldUseResources              	= bool ShouldUseResources()
 (userdata)
            GetAssociatedPrimaryAbilities   	= string GetAssociatedPrimaryAbilities()
 (userdata)
            IsOwnersGoldEnoughForUpgrade    	= bool IsOwnersGoldEnoughForUpgrade()
 (userdata)
            GetUpgradeRecommended           	= bool GetUpgradeRecommended()
 (userdata)
            GetModifierValueBonus           	= float GetModifierValueBonus()
 (userdata)
            GetAbilityDamageType            	= int GetAbilityDamageType()
 (userdata)
            GetAbilityTargetTeam            	= int GetAbilityTargetTeam()
 (userdata)
            GetMaxLevel                     	= int GetMaxLevel()
 (userdata)
            GetCursorTarget                 	= handle GetCursorTarget()
 (userdata)
            GetCloneSource                  	= handle GetCloneSource()
 (userdata)
            GetAbilityDamage                	= int GetAbilityDamage()
 (userdata)
            GetConceptRecipientType         	= int GetConceptRecipientType()
 (userdata)
            PayGoldCost                     	= void PayGoldCost()
 (userdata)
            SetLevel                        	= void SetLevel(int iLevel)
Sets the level of this ability. (userdata)
            GetSharedCooldownName           	= string GetSharedCooldownName()
 (userdata)
            ContinueCasting                 	= bool ContinueCasting()
 (userdata)
            SetHidden                       	= void SetHidden(bool bHidden)
 (userdata)
            IsStolen                        	= bool IsStolen()
 (userdata)
            IsOwnersManaEnough              	= bool IsOwnersManaEnough()
 (userdata)
            NumModifiersUsingAbility        	= int NumModifiersUsingAbility()
 (userdata)
            CanAbilityBeUpgraded            	= <unknown> CanAbilityBeUpgraded()
 (userdata)
            GetAOERadius                    	= int GetAOERadius()
 (userdata)
            IsRefreshable                   	= bool IsRefreshable()
 (userdata)
            GetCaster                       	= handle GetCaster()
 (userdata)
            IsCosmetic                      	= bool IsCosmetic(handle hEntity)
 (userdata)
            GetHeroLevelRequiredToUpgrade   	= int GetHeroLevelRequiredToUpgrade()
 (userdata)
            IsSharedWithTeammates           	= bool IsSharedWithTeammates()
 (userdata)
            SetStolen                       	= void SetStolen(bool bStolen)
 (userdata)
            GetAbilityKeyValues             	= table GetAbilityKeyValues()
Gets the key values definition for this ability. (userdata)
            ProcsMagicStick                 	= bool ProcsMagicStick()
 (userdata)
            RefCountsModifiers              	= bool RefCountsModifiers()
 (userdata)
            StartCooldown                   	= void StartCooldown(float flCooldown)
 (userdata)
            RefundManaCost                  	= void RefundManaCost()
 (userdata)
            GetCursorPosition               	= Vector GetCursorPosition()
 (userdata)
            IsTrained                       	= bool IsTrained()
 (userdata)
            GetEffectiveCooldown            	= float GetEffectiveCooldown(int iLevel)
 (userdata)
            OnToggle                        	= void OnToggle()
 (userdata)
         }
         ToggleAutoCast                  	= function: 0x0017d0a0 (function)
         GetDuration                     	= function: 0x0017d638 (function)
         SetUpgradeRecommended           	= function: 0x001811e8 (function)
         IsChanneling                    	= function: 0x00180b90 (function)
         GetAbilityTargetType            	= function: 0x0017d920 (function)
         GetAbilityName                  	= function: 0x0017c0d8 (function)
         RefreshCharges                  	= function: 0x00181168 (function)
         SetStealable                    	= function: 0x00180d30 (function)
         PlaysDefaultAnimWhenStolen      	= function: 0x00181048 (function)
         GetStolenActivityModifier       	= function: 0x001810d8 (function)
         IsActivated                     	= function: 0x0017c558 (function)
         GetAbilityType                  	= function: 0x0017c688 (function)
         OnAbilityPhaseInterrupted       	= function: 0x0017dbc0 (function)
         IsFullyCastable                 	= function: 0x0017e180 (function)
         GetAutoCastState                	= function: 0x0017d120 (function)
         IsPassive                       	= function: 0x0017c360 (function)
         GetCastRange                    	= function: 0x001e2918 (function)
         GetBackswingTime                	= function: 0x00180220 (function)
         IsHiddenWhenStolen              	= function: 0x00180e30 (function)
         OnOwnerSpawned                  	= function: 0x0017ddd0 (function)
         GetCooldownTime                 	= function: 0x0017e618 (function)
         PayManaCost                     	= function: 0x0017e8b8 (function)
         GetAssociatedSecondaryAbilities 	= function: 0x00180ca0 (function)
         GetCloneSource                  	= function: 0x0017d690 (function)
         SpeakTrigger                    	= function: 0x00180980 (function)
         SetChanneling                   	= function: 0x00180b10 (function)
         GetModifierValue                	= function: 0x0017cca0 (function)
         GetCursorTargetingNothing       	= function: 0x0017c070 (function)
         GetCooldownTimeRemaining        	= function: 0x0017e698 (function)
         GetChannelStartTime             	= function: 0x0017d280 (function)
         IsInAbilityPhase                	= function: 0x00180a88 (function)
         GetToggleState                  	= function: 0x0017d798 (function)
         OnAbilityPinged                 	= function: 0x0017c788 (function)
         EndCooldown                     	= function: 0x0017e388 (function)
         GetCooldown                     	= function: 0x0017e408 (function)
         ToggleAbility                   	= function: 0x0017c888 (function)
         SetInAbilityPhase               	= function: 0x00180a00 (function)
         OnSpellStart                    	= function: 0x0017dc50 (function)
         CastAbility                     	= function: 0x0017c908 (function)
         GetChannelledManaCostPerSecond  	= function: 0x00180328 (function)
         PayGoldCost                     	= function: 0x0017d390 (function)
         IsOwnersGoldEnough              	= function: 0x0017d410 (function)
         IsHidden                        	= function: 0x0017c500 (function)
         GetLevelSpecialValueFor         	= function: 0x001812f8 (function)
         MarkAbilityButtonDirty          	= function: 0x001807e8 (function)
         OnChannelThink                  	= function: 0x00180768 (function)
         HeroXPChange                    	= function: 0x001806e8 (function)
         SetAbilityIndex                 	= function: 0x0017c158 (function)
         OnHeroCalculateStatBonus        	= function: 0x00180658 (function)
         ResetToggleOnRespawn            	= function: 0x00180550 (function)
         IsCooldownReady                 	= function: 0x0017e510 (function)
         IsToggle                        	= function: 0x0017c480 (function)
         GetCastPoint                    	= function: 0x0017ca08 (function)
         OnUpgrade                       	= function: 0x0017dd50 (function)
         GetLevel                        	= function: 0x0012c4d8 (function)
         GetSpecialValueFor              	= function: 0x00181380 (function)
         DecrementModifierRefCount       	= function: 0x0017e060 (function)
         IsItem                          	= function: 0x0017d1a8 (function)
         UseResources                    	= function: 0x0017e838 (function)
         IsAttributeBonus                	= function: 0x0017e200 (function)
         IncrementModifierRefCount       	= function: 0x0017dfd0 (function)
         GetGoldCostForUpgrade           	= function: 0x00180438 (function)
         GetGoldCost                     	= function: 0x001803b8 (function)
         GetAbilityTargetFlags           	= function: 0x0017d9a8 (function)
         GetManaCost                     	= function: 0x001802a8 (function)
         SetOverrideCastPoint            	= function: 0x0017cc18 (function)
         OnOwnerDied                     	= function: 0x001801a0 (function)
         GetChannelTime                  	= function: 0x0017d200 (function)
         CreateVisibilityNode            	= function: 0x0017d710 (function)
         GetEffectiveCooldown            	= function: 0x0017e488 (function)
         GetPlaybackRateOverride         	= function: 0x0017c3a8 (function)
         IsStealable                     	= function: 0x00180db0 (function)
         EndChannel                      	= function: 0x0017c808 (function)
         OnChannelFinish                 	= function: 0x0017dcd0 (function)
         SetRefCountsModifiers           	= function: 0x0017cdb0 (function)
         OnAbilityPhaseStart             	= function: 0x0017db38 (function)
         UpgradeAbility                  	= function: 0x0017c708 (function)
         SetFrozenCooldown               	= function: 0x0017e728 (function)
         ShouldUseResources              	= function: 0x0017e7b0 (function)
         GetAssociatedPrimaryAbilities   	= function: 0x00180c10 (function)
         IsOwnersGoldEnoughForUpgrade    	= function: 0x0017d520 (function)
         GetUpgradeRecommended           	= function: 0x00181270 (function)
         GetModifierValueBonus           	= function: 0x0017cd28 (function)
         GetAbilityTargetTeam            	= function: 0x0017d898 (function)
         GetBehavior                     	= function: 0x0017d818 (function)
         GetMaxLevel                     	= function: 0x0017dab8 (function)
         GetCursorTarget                 	= function: 0x0012c5c0 (function)
         GetAbilityDamage                	= function: 0x0017d5b0 (function)
         PayGoldCostForUpgrade           	= function: 0x0017d498 (function)
         GetConceptRecipientType         	= function: 0x001808f8 (function)
         GetCursorPosition               	= function: 0x0012c418 (function)
         NumModifiersUsingAbility        	= function: 0x0017e0f0 (function)
         GetSharedCooldownName           	= function: 0x0017e590 (function)
         ContinueCasting                 	= function: 0x0017cb08 (function)
         SetLevel                        	= function: 0x0017c1c8 (function)
         IsStolen                        	= function: 0x00180fc8 (function)
         IsOwnersManaEnough              	= function: 0x0017d308 (function)
         IsNull                          	= function: 0x0012c3f0 (function)
         RefCountsModifiers              	= function: 0x0017df48 (function)
         GetAOERadius                    	= function: 0x0017ca88 (function)
         IsRefreshable                   	= function: 0x0017ce18 (function)
         GetAbilityKeyValues             	= function: 0x0012c478 (function)
         IsSharedWithTeammates           	= function: 0x0017cf18 (function)
         GetHeroLevelRequiredToUpgrade   	= function: 0x0017c2d0 (function)
         SetHidden                       	= function: 0x0017cfa0 (function)
         SetStolen                       	= function: 0x00180f48 (function)
         GetCaster                       	= function: 0x0012c568 (function)
         ProcsMagicStick                 	= function: 0x0017e288 (function)
         CanAbilityBeUpgraded            	= function: 0x0017c248 (function)
         StartCooldown                   	= function: 0x0017e308 (function)
         RefundManaCost                  	= function: 0x0017e938 (function)
         IsCosmetic                      	= function: 0x001e2938 (function)
         IsTrained                       	= function: 0x0017bfd0 (function)
         SetActivated                    	= function: 0x0017d020 (function)
         OnToggle                        	= function: 0x0017de50 (function)
         GetTeamNumber                   	= function: 0x0013c170 (function)
         GetChildren                     	= function: 0x00139e90 (function)
         IsNPC                           	= function: 0x0013b200 (function)
         SetAngularVelocity              	= function: 0x0013b000 (function)
         FDesc                           	= table: 0x00139a40 (table, already seen)
         IsNull                          	= function: 0x001399e0 (function)
         SetOwner                        	= function: 0x0013aa70 (function)
         SetLocalScale                   	= function: 0x0013bff0 (function)
         DeleteAttribute                 	= function: 0x0013a8e0 (function)
         GetLocalScale                   	= function: 0x0013bf70 (function)
         GetAngularVelocity              	= function: 0x0013af78 (function)
         SetLocalOrigin                  	= function: 0x0013ab50 (function)
         TransformPointWorldToEntity     	= function: 0x0013ace0 (function)
         SetContextThink                 	= function: 0x0013c3d8 (function)
         Attribute_SetIntValue           	= function: 0x0013a750 (function)
         HasAttribute                    	= function: 0x0013a860 (function)
         Attribute_GetIntValue           	= function: 0x0013a7d8 (function)
         GetBoundingMaxs                 	= function: 0x0013ae78 (function)
         GetCenter                       	= function: 0x0013c0f0 (function)
         GetOwner                        	= function: 0x0013a9f0 (function)
         SetConstraint                   	= function: 0x0013a3c0 (function)
         GetContext                      	= function: 0x0013c558 (function)
         SetMass                         	= function: 0x0013bd18 (function)
         SetAbsScale                     	= function: 0x0013bef0 (function)
         OverrideFriction                	= function: 0x0013b928 (function)
         SetEntityName                   	= function: 0x0013aaf0 (function)
         GetUpVector                     	= function: 0x00139ae0 (function)
         GetVelocity                     	= function: 0x0013b680 (function)
         RemoveEffects                   	= function: 0x0013a5c0 (function)
         SetLocalAngles                  	= function: 0x0013a210 (function)
         Attribute_SetFloatValue         	= function: 0x0013a640 (function)
         GetBaseVelocity                 	= function: 0x0013b8a8 (function)
         IsBaseNPC                       	= function: 0x001e2958 (function)
         GetLocalAngles                  	= function: 0x0013a290 (function)
         GatherCriteria                  	= function: 0x0013c5d8 (function)
         Trigger                         	= function: 0x0013c360 (function)
         SetAbsAngles                    	= function: 0x00139f88 (function)
         GetBounds                       	= function: 0x0013aef8 (function)
         SetHealth                       	= function: 0x0013b378 (function)
         GetMoveParent                   	= function: 0x00139d00 (function)
         GetOrigin                       	= function: 0x0013bc40 (function)
         EmitSound                       	= function: 0x0013b9b0 (function)
         Attribute_GetFloatValue         	= function: 0x0013a6c8 (function)
         SetAbsOrigin                    	= function: 0x0013c070 (function)
         TakeDamage                      	= function: 0x0013b088 (function)
         TransformPointEntityToWorld     	= function: 0x0013ac50 (function)
         GetRootMoveParent               	= function: 0x00139f00 (function)
         SetForwardVector                	= function: 0x0013ad70 (function)
         SetContextNum                   	= function: 0x0013c4d8 (function)
         GetAbsOrigin                    	= function: 0x0013bd70 (function)
         EmitSoundParams                 	= function: 0x0013ba30 (function)
         NextMovePeer                    	= function: 0x0013a0e8 (function)
         ApplyLocalAngularVelocityImpulse	= function: 0x0013b788 (function)
         GetMaxHealth                    	= function: 0x0013b278 (function)
         PrecacheScriptSound             	= function: 0x0013bbb8 (function)
         GetLocalAngularVelocity         	= function: 0x0013b820 (function)
         ApplyAbsVelocityImpulse         	= function: 0x0013b700 (function)
         GetLocalVelocity                	= function: 0x0013b5f8 (function)
         GetHealth                       	= function: 0x0013b3f8 (function)
         EyeAngles                       	= function: 0x0013a090 (function)
         SetVelocity                     	= function: 0x0013b578 (function)
         GetModelName                    	= function: 0x00139d90 (function)
         SetContext                      	= function: 0x0013c458 (function)
         GetRightVector                  	= function: 0x00139be0 (function)
         GetAnglesAsVector               	= function: 0x0013a008 (function)
         SetThink                        	= function: 0x001ca2e8 (function)
         GetForwardVector                	= function: 0x00139b58 (function)
         GetAngles                       	= function: 0x0013bdf0 (function)
         SetMaxHealth                    	= function: 0x0013b2f8 (function)
         IsAlive                         	= function: 0x0013b108 (function)
         SetParent                       	= function: 0x0013a340 (function)
         IsPlayer                        	= function: 0x0013b180 (function)
         AddEffects                      	= function: 0x0013a540 (function)
         IsInstance                      	= function: 0x001ca328 (function)
         GetBoundingMins                 	= function: 0x0013adf8 (function)
         EyePosition                     	= function: 0x0013a440 (function)
         SetGravity                      	= function: 0x0013b478 (function)
         StopThink                       	= function: 0x001ca308 (function)
         FirstMoveChild                  	= function: 0x00139c60 (function)
         SetFriction                     	= function: 0x0013b4f8 (function)
         GetLocalOrigin                  	= function: 0x0013abd0 (function)
         SetOrigin                       	= function: 0x0013a190 (function)
         GetOwnerEntity                  	= function: 0x00139e10 (function)
         SetAngles                       	= function: 0x0013a4c0 (function)
         StopSound                       	= function: 0x0013bab0 (function)
         GetMass                         	= function: 0x0013bcc0 (function)
         GetAbsScale                     	= function: 0x0013be70 (function)
         ValidatePrivateScriptScope      	= function: 0x0013a960 (function)
         GetSoundDuration                	= function: 0x0013bb30 (function)
         Kill                            	= function: 0x00139a68 (function)
         GetTeam                         	= function: 0x0013c1f0 (function)
         SetTeam                         	= function: 0x0013c268 (function)
         FollowEntity                    	= function: 0x0013c2e0 (function)
         GetEntityIndex                  	= function: 0x00113c88 (function)
         DisconnectRedirectedOutput      	= function: 0x00138df0 (function)
         GetOrCreatePublicScriptScope    	= function: 0x001390a8 (function)
         FDesc                           	= table: 0x00138b68 (table, already seen)
         IsNull                          	= function: 0x00138ae8 (function)
         GetOrCreatePrivateScriptScope   	= function: 0x001391c0 (function)
         GetPrivateScriptScope           	= function: 0x00139138 (function)
         entindex                        	= function: 0x00113cb8 (function)
         GetIntAttr                      	= function: 0x00138d40 (function)
         FireOutput                      	= function: 0x00138bc8 (function)
         Destroy                         	= function: 0x00139358 (function)
         GetDebugName                    	= function: 0x00113d48 (function)
         SetIntAttr                      	= function: 0x00138c88 (function)
         GetClassname                    	= function: 0x00138f38 (function)
         GetName                         	= function: 0x00138f08 (function)
         ConnectOutput                   	= function: 0x00113ac8 (function)
         RedirectOutput                  	= function: 0x00138dc0 (function)
         GetEntityHandle                 	= function: 0x00138f90 (function)
         DisconnectOutput                	= function: 0x00113668 (function)
         RemoveSelf                      	= function: 0x00138cc0 (function)
         GetPublicScriptScope            	= function: 0x00139020 (function)
      }
      __self                          	= userdata: 0x001d5cd0 (userdata)
   }
}